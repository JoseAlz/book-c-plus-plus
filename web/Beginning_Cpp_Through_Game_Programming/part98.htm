<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using the Logical OR Operator</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part97.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part99.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="part3.htm#bookmark4" class="h1">Using the Logical OR </a><h1 href="#bookmark4">Operator</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The logical OR operator, <span class="s35">||</span>, lets you join two expressions to form a larger one, which can be evaluated to <span class="s35">true </span>or <span class="s35">false</span>. The new expression is <span class="s35">true </span>if the first</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark285">66 Chapter 2 </a><span class="s32">n </span>Truth, Branching, and the Game Loop: Guess My Number</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">expression <span class="s11">or </span>the second expression is <span class="s35">true</span>; otherwise, it is <span class="s35">false</span>. Just as in English, <span class="s12">“</span>or<span class="s12">” </span>means either. If either the first or second expression is <span class="s35">true</span>, then the new expression is <span class="s35">true</span>. (If both are <span class="s35">true</span>, then the larger expression is still <span class="s35">true</span>.) Here<span class="s12">’</span>s a concrete example from the Designers Network program:</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">else if (username == &quot;guest&quot; || password == &quot;guest&quot;)</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;"><a name="bookmark208">The expression </a><span class="s35">username == &quot;guest&quot; || password == &quot;guest&quot; </span>is <span class="s35">true </span>if <span class="s35">username == &quot;guest&quot; </span>is <span class="s35">true </span>or if <span class="s35">password == &quot;guest&quot; </span>is <span class="s35">true</span>. This works perfectly because I want to grant a user access as a guest as long as he enters <span class="s35">guest </span>for the username or password. If the user enters <span class="s35">guest </span>for both, that<span class="s12">’</span>s fine too.<a name="bookmark286">&zwnj;</a></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Another way to understand how <span class="s35">|| </span>works is to look at all of the possible combinations of truth and falsity (see Table 2.4).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="410" height="176" alt="image" src="Image_105.png"/></span></p><p class="s35" style="text-indent: 0pt;line-height: 10pt;text-align: left;">true</p><p class="s35" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">true</p><p class="s35" style="text-indent: 0pt;line-height: 13pt;text-align: left;">true false</p><p style="text-indent: 0pt;text-align: left;"/><p class="s35" style="text-indent: 0pt;line-height: 10pt;text-align: left;">true</p><p class="s35" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">false</p><p class="s35" style="text-indent: 0pt;line-height: 13pt;text-align: left;">true false</p><p style="text-indent: 0pt;text-align: left;"/><p class="s35" style="text-indent: 0pt;line-height: 10pt;text-align: left;">true</p><p class="s35" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">true</p><p class="s35" style="text-indent: 0pt;line-height: 13pt;text-align: left;">false false</p><p style="text-indent: 0pt;text-align: left;"/><p class="s37" style="text-indent: 0pt;line-height: 10pt;text-align: left;">username == &quot;guest&quot; ||</p><p class="s37" style="text-indent: 0pt;text-align: left;">password == &quot;guest&quot;</p><p style="text-indent: 0pt;text-align: left;"/><p class="s37" style="text-indent: 0pt;line-height: 10pt;text-align: left;">password ==</p><p class="s37" style="text-indent: 0pt;text-align: left;">&quot;guest&quot;</p><p style="text-indent: 0pt;text-align: left;"/><p class="s37" style="text-indent: 0pt;line-height: 10pt;text-align: left;">username ==</p><p class="s37" style="text-indent: 0pt;text-align: left;">&quot;guest&quot;</p><p style="text-indent: 0pt;text-align: left;"/><p class="s43" style="text-indent: 0pt;line-height: 12pt;text-align: left;">Table 2.4 <span class="s44">Possible Login Combinations Using the OR Operator</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part97.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part99.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
