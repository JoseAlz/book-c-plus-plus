<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Reassigning Pointers</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part295.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part297.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><h1 href="#bookmark9">Reassigning Pointers</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">Unlike references, pointers can point to different objects at different times during the life of a program. Reassigning a pointer works like reassigning any other variable. Next, I reassign <span class="s35">pScore </span>with the following line.</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: justify;">pScore = &amp;newScore;</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">As the result, <span class="s35">pScore </span>now points to <span class="s35">newScore</span>. To prove this, I display the address of <span class="s35">newScore </span>by sending <span class="s35">&amp;newScore </span>to <span class="s35">cout</span>, followed by the address stored in <span class="s35">pScore</span>. Both statements display the same address. Then I send <span class="s35">newScore </span>and</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">*pScore <span class="p">to </span>cout<span class="p">. Both display </span>5000 <span class="p">because they both access the same chunk of memory that stores this value.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Tra p</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="517" height="1" alt="image" src="Image_280.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">Don’t change the value to which a pointer points when you want to change the pointer itself. For example, if I want to change <span class="s35">pScore </span>to point to <span class="s35">newScore</span>, then the following line would be a big mistake.</p><p class="s35" style="padding-top: 5pt;padding-left: 60pt;text-indent: 0pt;text-align: justify;">*pScore = newScore;</p><p class="s19" style="padding-top: 4pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">This code simply changes the value to which <span class="s35">pScore </span>currently points; it doesn’t change <span class="s35">pScore </span>itself. If <span class="s35">newScore </span>is equal to <span class="s35">5000</span>, then the previous code is equivalent to <span class="s35">*pScore = 5000; </span>and <span class="s35">pScore </span>still points to the same variable it pointed to before the assignment.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_281.png"/></span></p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark814">230 Chapter 7 </a><span class="s32">n </span>Pointers: Tic-Tac-Toe 2.0<a name="bookmark858">&zwnj;</a><a name="bookmark859">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part295.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part297.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
