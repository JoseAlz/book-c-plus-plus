<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Summary</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part242.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part244.htm">Next &gt;</a></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="#bookmark8" class="s30">Summary</a></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">In this chapter, you should have learned the following concepts:</p><p class="s29" style="padding-top: 9pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">n <span class="p">Functions allow you to break up your programs into manageable chunks.</span></p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;"><span class="s29">n </span>One way to declare a function is to write a function prototype<span class="s12">—</span>code that lists the return value, name, and parameter types of a function.</p><p class="s29" style="padding-top: 5pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">n <span class="p">Defining a function means writing all the code that makes the function tick.</span></p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark682">184 Chapter 5 </a><span class="s32">n </span>Functions: Mad Lib<a name="bookmark683">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;"><span class="s29">n </span>You can use the <span class="s35">return </span>statement to return a value from a function. You can also use <span class="s35">return </span>to end a function that has <span class="s35">void </span>as its return type.</p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;"><span class="s29">n </span>A variable<span class="s12">’</span>s scope determines where the variable can be seen in your program.</p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">n <span class="p">Global variables are accessible from any part of your program. In general, you should try to limit your use of global variables.</span></p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">n <span class="p">Global constants are accessible from any part of your program. Using global constants can make your program code clearer.</span></p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;"><a name="bookmark600">n </a><span class="p">Default arguments are assigned to a parameter if no value for the param- eter is specified in the function call.</span><a name="bookmark684">&zwnj;</a></p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 107%;text-align: left;">n <span class="p">Function overloading is the process of creating multiple definitions for the same function, each of which has a different set of parameters.</span></p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;"><span class="s29">n </span>Function inlining is the process of asking the compiler to inline a function<span class="s12">—</span>meaning that the compiler should make a copy of the function everywhere in the code where the function is called. Inlining very small functions can sometimes yield a performance boost.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part242.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part244.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
