<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Picking a Word to Jumble</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part145.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part147.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="part3.htm#bookmark6" class="h1">Picking a Word to </a><h1 href="#bookmark6">Jumble</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">My next task is to pick a word to jumble<span class="s12">—</span>the word the player will try to guess. First, I create a list of words and hints:</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">int main()</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">enum fields {WORD, HINT, NUM_FIELDS}; const int NUM_WORDS = 5;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">const string WORDS[NUM_WORDS][NUM_FIELDS] =</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">{&quot;wall&quot;, &quot;Do you feel you’re banging your head against something?&quot;},</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">{&quot;glasses&quot;, &quot;These might help you see the answer.&quot;},</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">{&quot;labored&quot;, &quot;Going slowly, is it?&quot;},</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">{&quot;persistent&quot;, &quot;Keep at it.&quot;},</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">{&quot;jumble&quot;, &quot;It’s what the game is all about.&quot;}</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">};</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark410">108 Chapter 3 </a><span class="s32">n </span>For Loops, Strings, and Arrays: Word Jumble</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">I declare and initialize a two-dimensional array with words and corresponding hints.   The   enumeration   defines   enumerators   for   accessing   the   array.   For example,  <span class="s35">WORDS[x][WORD]  </span>is  always  a  <span class="s35">string  </span>object  that  is  one  of  the  words, while <span class="s35">WORDS[x][HINT]  </span>is the corresponding hint.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Tric k</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="519" height="1" alt="image" src="Image_148.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">You can list a final enumerator in an enumeration as a convenient way to store the number of elements. Here’s an example:</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: justify;">enum difficulty {EASY, MEDIUM, HARD, NUM_DIFF_LEVELS};</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: justify;"><a name="bookmark347">cout &lt;&lt; &quot;There are &quot; &lt;&lt; NUM_DIFF_LEVELS &lt;&lt; &quot; difficulty levels.&quot;;</a><a name="bookmark411">&zwnj;</a></p><p class="s19" style="padding-top: 4pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">In the previous code, <span class="s35">NUM_DIFF_LEVELS </span>is 3, the exact number of difficulty levels in the enumeration. As a result, the second line of code displays the message, &quot;There are 3 difficulty levels.&quot;</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_149.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">Next, I pick a random word from my choices.</p><p class="s35" style="padding-top: 6pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">srand(static_cast&lt;unsigned int&gt;(time(0))); int choice = (rand() % NUM_WORDS);</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">string theWord = WORDS[choice][WORD];    // word to guess string theHint = WORDS[choice][HINT];    // hint for word</p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">I generate a random index based on the number of words in the array. Then I assign both the random word at that index and it<span class="s12">’</span>s corresponding hint to the variables <span class="s35">theWord </span>and <span class="s35">theHint</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part145.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part147.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
