<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Displaying Text through the Standard Output</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part21.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part23.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part3.htm#bookmark1" class="h1">Displaying Text through the Standard </a><h1 href="#bookmark1">Output</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The first line in the body of <span class="s35">main() </span>displays <span class="s35">Game Over!</span>, followed by a newline, in the console window.</p><p class="s35" style="padding-top: 5pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">std::cout &lt;&lt; &quot;Game Over!&quot; &lt;&lt; std::endl;</p><p style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;line-height: 91%;text-align: justify;"><span class="s35">&quot;Game Over!&quot; </span>is a <span class="s11">string</span><span class="s12">—</span>a series of printable characters. Technically, it<span class="s12">’</span>s a <span class="s11">string literal</span>, meaning it<span class="s12">’</span>s literally the characters between the quotes.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;"><span class="s35">cout </span>is an object, defined in the file <span class="s35">iostream</span>, that<span class="s12">’</span>s used to send data to the standard output stream. In most programs (including this one), the standard output stream simply means the console window on the computer screen.</p><p class="s19" style="padding-top: 2pt;padding-left: 278pt;text-indent: 0pt;text-align: left;"><a name="bookmark97">Writing Your First C</a><span class="s36">þþ </span>Program 9</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 9pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">I use the <span class="s11">output operator </span>(<span class="s35">&lt;&lt;</span>) to send the string to <span class="s35">cout</span>. You can think of the output operator like a funnel; it takes whatever<span class="s12">’</span>s on the open side and funnels it to the pointy side. So the string is funneled to the standard output<span class="s12">—</span>the screen.</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">I use <span class="s35">std </span>to prefix <span class="s35">cout </span>to tell the compiler that I mean <span class="s35">cout </span>from the standard library. <span class="s35">std </span>is a <span class="s11">namespace</span>. You can think of a namespace like an area code of a phone number<span class="s12">—</span>it identifies the group to which something belongs. You prefix a namespace using the <span class="s11">scope resolution operator </span>(<span class="s35">::</span>).</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;"><a name="bookmark30">Finally, I send </a><span class="s35">std::endl </span>to the standard output. <span class="s35">endl </span>is defined in <span class="s35">iostream </span>and is also an object in the <span class="s35">std </span>namespace. Sending <span class="s35">endl </span>to the standard output acts like  pressing  the  Enter  key  in  the  console  window.  In  fact,  if  I  were  to  send another string to the console window, it would appear on the next line.<a name="bookmark98">&zwnj;</a></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">I understand this might be a lot to take in, so check out Figure 1.3 for a visual representation of the relationship between all of the elements I<span class="s12">’</span>ve just described.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 101pt;text-indent: 0pt;line-height: 8pt;text-align: left;"><span><img width="81" height="10" alt="image" src="Image_035.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><span><img width="244" height="184" alt="image" src="Image_036.png"/></span></p><p class="s37" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">Figure 1.3</p><p class="s19" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">An implementation of Standard C<span class="s36">þþ </span>includes a set of files called the standard library, which includes the file <span class="s35">iostream</span>, which defines various things, including the object <span class="s35">cout</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part21.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part23.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
