<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Introducing the Simple Boss Program</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part388.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part390.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="part3.htm#bookmark12" class="h1">Introducing the Simple Boss </a><h1 href="#bookmark12">Program</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The Simple Boss program demonstrates inheritance. In it, I define a class for lowly enemies,  <span class="s35">Enemy</span>.  From  this  class,  I  derive  a  new  class  for  tough  bosses  that  the player has to face, <span class="s35">Boss</span>. Then, I instantiate an <span class="s35">Enemy  </span>object and call its <span class="s35">Attack() </span>member function. Next, I instantiate a <span class="s35">Boss </span>object. I<span class="s12">’</span>m able to call <span class="s35">Attack() </span>for the <span class="s35">Boss </span>object because it inherits the member function from <span class="s35">Enemy</span>. Finally, I call the <span class="s35">Boss  </span>object<span class="s12">’</span>s  <span class="s35">SpecialAttack()  </span>member  function,  which  I  defined  in  <span class="s35">Boss</span>,  for  a special  attack.  Since  I  define  <span class="s35">SpecialAttack()  </span>in  <span class="s35">Boss</span>,  only  <span class="s35">Boss  </span>objects  have access to it. <span class="s35">Enemy </span>objects don<span class="s12">’</span>t have this special attack at their disposal. Figure 10.2 shows the results of the program.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><span><img width="482" height="254" alt="image" src="Image_414.gif"/></span></p><p class="s37" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Figure 10.2</p><p class="s19" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">The <span class="s35">Boss </span>class inherits the <span class="s35">Attack() </span>member function and then defines its own <span class="s35">SpecialAttack()</span></p><p class="s19" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">member function.</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">334 Chapter 10 <span class="s32">n </span>Inheritance and Polymorphism: Blackjack</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;"><a href="http://www.courseptr.com/downloads" class="s15" target="_blank">You can download the code for this program from the Course Technology website (</a>www.courseptr.com/downloads). The program is in the Chapter 10 folder; the filename is <span class="s35">simple_boss.cpp</span>.</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">//Simple Boss</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">//Demonstrates inheritance</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 118%;text-align: left;">#include &lt;iostream&gt; using namespace std;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">class Enemy</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">public:</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">int m_Damage;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">Enemy();</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">void Attack() const;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: -20pt;line-height: 119%;text-align: left;">Enemy::Enemy(): m_Damage(10)</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">{}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">void Enemy::Attack() const</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;Attack inflicts &quot; &lt;&lt; m_Damage &lt;&lt; &quot; damage points!\n&quot;;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">class Boss : public Enemy</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">public:</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">int m_DamageMultiplier;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">Boss();</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">void SpecialAttack() const;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">};</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Boss::Boss():</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">m_DamageMultiplier(3)</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{}</p><p class="s19" style="padding-top: 2pt;padding-left: 321pt;text-indent: 0pt;text-align: left;"><a name="bookmark1150">Introducing Inheritance 335</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">void Boss::SpecialAttack() const</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;Special Attack inflicts &quot; &lt;&lt; (m_DamageMultiplier * m_Damage); cout &lt;&lt; &quot; damage points!\n&quot;;</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">int main()</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">cout &lt;&lt; &quot;Creating an enemy.\n&quot;; Enemy enemy1;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;"><a name="bookmark1106">enemy1.Attack();</a><a name="bookmark1151">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">cout &lt;&lt; &quot;\nCreating a boss.\n&quot;; Boss boss1;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">boss1.Attack(); boss1.SpecialAttack();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">return 0;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part388.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part390.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
