<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Introducing the High Scores Program</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part175.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part177.htm">Next &gt;</a></p><p style="padding-top: 10pt;padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part3.htm#bookmark6" class="h1">Introducing the High Scores </a><h1 href="#bookmark6">Program</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">The High Scores program creates a vector of high scores. It uses STL algorithms to search, shuffle, and sort the scores. Figure 4.5 illustrates the program.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><span><img width="447" height="236" alt="image" src="Image_175.gif"/></span></p><p class="s37" style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Figure 4.5</p><p class="s19" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">STL algorithms search, shuffle, and sort elements of a vector of high scores.</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">132 Chapter 4 <span class="s32">n </span>The Standard Template Library: Hangman</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;"><a href="http://www.courseptr.com/downloads" class="s15" target="_blank">You can download the code for this program from the Course Technology website (</a>www.courseptr.com/downloads). The program is in the Chapter 4 folder; the filename is <span class="s35">high_scores.cpp</span>.</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">// High Scores</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">// Demonstrates algorithms</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 119%;text-align: left;">#include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;algorithm&gt; #include &lt;ctime&gt; #include &lt;cstdlib&gt;</p><p class="s35" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 30pt;text-align: left;">using namespace std; int main()</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 9pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">vector&lt;int&gt;::const_iterator iter;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 7pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;Creating a list of scores.&quot;; vector&lt;int&gt; scores; scores.push_back(1500); scores.push_back(3500); scores.push_back(7500);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;\nHigh Scores:\n&quot;;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">for (iter = scores.begin(); iter != scores.end(); ++iter)</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; *iter &lt;&lt; endl;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">cout &lt;&lt; &quot;\nFinding a score.&quot;; int score;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">cout &lt;&lt; &quot;\nEnter a score to find: &quot;; cin &gt;&gt; score;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">iter = find(scores.begin(), scores.end(), score); if (iter != scores.end())</p><p class="s19" style="padding-top: 2pt;text-indent: 0pt;text-align: right;"><a name="bookmark510">Using Algorithms 133</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">else</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;Score found.\n&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 6pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;Score not found.\n&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;"><a name="bookmark448">cout &lt;&lt; &quot;\nRandomizing scores.&quot;; srand(static_cast&lt;unsigned int&gt;(time(0))); random_shuffle(scores.begin(), scores.end()); cout &lt;&lt; &quot;\nHigh Scores:\n&quot;;</a><a name="bookmark511">&zwnj;</a></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 11pt;text-align: left;">for (iter = scores.begin(); iter != scores.end(); ++iter)</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; *iter &lt;&lt; endl;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;\nSorting scores.&quot;; sort(scores.begin(), scores.end()); cout &lt;&lt; &quot;\nHigh Scores:\n&quot;;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 11pt;text-align: left;">for (iter = scores.begin(); iter != scores.end(); ++iter)</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; *iter &lt;&lt; endl;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">return 0;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part175.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part177.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
