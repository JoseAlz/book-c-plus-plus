<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using a Pointer to a Constant</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part299.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part301.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part3.htm#bookmark10" class="h1">Using a Pointer to a </a><h1 href="#bookmark10">Constant</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">As you<span class="s12">’</span>ve seen, you can use pointers to change the values to which they point. However, by using the <span class="s35">const </span>keyword when you declare a pointer, you can restrict a pointer so it can<span class="s12">’</span>t be used to change the value to which it points. A pointer like this is called a <span class="s11">pointer to a constant</span>. Here<span class="s12">’</span>s an example of declaring such a pointer:</p><p class="s35" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">const int* pNumber;    //a pointer to a constant</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The preceding code declares a pointer to a constant, <span class="s35">pNumber</span>. You declare a pointer to a constant by putting <span class="s35">const </span>right before the type of value to which the pointer will point.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">You assign an address to a pointer to a constant as you did before.</p><p class="s35" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 119%;text-align: left;">int lives = 3; pNumber = &amp;lives;</p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">However, you can<span class="s12">’</span>t use the pointer to change the value to which it points. The following line is illegal.</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">*pNumber -= 1;    //illegal - - can’t use pointer to a constant to change value</p><p class="s35" style="padding-top: 2pt;padding-left: 120pt;text-indent: 0pt;text-align: left;">//that pointer points to</p><p style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Although you can<span class="s12">’</span>t use a pointer to a constant to change the value to which it points, the pointer itself can change. This means that a pointer to a constant</p><p class="s19" style="padding-top: 2pt;padding-left: 250pt;text-indent: 0pt;text-align: left;"><a name="bookmark818">Understanding Pointers and Constants 233</a><a name="bookmark865">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">can point to different objects in a program. The following code is perfectly legal.</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">const int MAX_LIVES = 5;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">pNumber = &amp;MAX_LIVES;    //pointer itself can change</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part299.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part301.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
