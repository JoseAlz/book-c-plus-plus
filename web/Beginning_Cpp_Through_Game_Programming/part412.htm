<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Introducing the Blackjack Game</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part411.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part413.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="#bookmark13" class="s30">Introducing the Blackjack Game</a></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;"><a name="bookmark1129">The final project for this chapter is a simplified version of the casino card game Blackjack (tacky green felt not included). The game works like this: Players are dealt cards with point values. Each player tries to reach a total of 21 without exceeding that amount. Numbered cards count as their face value. An ace counts as either 1 or 11 (whichever is best for the player), and any jack, queen, or king counts as 10.</a><a name="bookmark1195">&zwnj;</a></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The computer is the house (the casino) and it competes against one to seven players. At the beginning of the round, all participants (including the house) are dealt two cards. Players can see all of their cards, along with their total. However, one of house<span class="s12">’</span>s cards is hidden for the time being.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Next, each player gets the chance to take one additional card at a time for as long as he likes. If a player<span class="s12">’</span>s total exceeds 21 (known as <span class="s11">busting</span>), the player loses. After all players have had the chance to take additional cards, the house reveals its hidden card. The house must then take additional cards as long as its total is 16 or less. If the house busts, all players who have not busted win. Otherwise, each remaining player<span class="s12">’</span>s total is compared to the house<span class="s12">’</span>s total. If the player<span class="s12">’</span>s total is greater than the house<span class="s12">’</span>s, he wins. If the player<span class="s12">’</span>s total is less than the house<span class="s12">’</span>s, he loses. If the two totals are the same, the player ties the house (also known as <span class="s11">pushing</span>). Figure 10.6 shows the game.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part413.htm">Designing the Classes</a><a class="toc0" href="part414.htm">Planning the Game Logic</a><a class="toc0" href="part415.htm">The Card Class</a><a class="toc0" href="part416.htm">The Hand Class</a><a class="toc0" href="part417.htm">The GenericPlayer Class</a><a class="toc0" href="part418.htm">The Player Class</a><a class="toc0" href="part419.htm">The House Class</a><a class="toc0" href="part420.htm">The Deck Class</a><a class="toc0" href="part421.htm">The Game Class</a><a class="toc0" href="part422.htm">The main() Function</a><a class="toc0" href="part423.htm">Overloading the operator&lt;&lt;() Function</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part411.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part413.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
