<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using the switch Statement</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part79.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part81.htm">Next &gt;</a></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="#bookmark4" class="s30">Using the switch Statement</a></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">You can use a <span class="s35">switch </span>statement to create multiple branching points in your code. Here<span class="s12">’</span>s a generic form of the <span class="s35">switch </span>statement:</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">switch (<i>choice</i>)</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">case <i>value1</i>: <i>statement1</i>;</p><p class="s35" style="padding-top: 2pt;padding-left: 145pt;text-indent: 0pt;text-align: left;">break;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">case <i>value2</i>: <i>statement2</i>;</p><p class="s35" style="padding-top: 2pt;padding-left: 145pt;text-indent: 0pt;text-align: left;">break;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">case <i>value3</i>: <i>statement3</i>;</p><p class="s35" style="padding-top: 2pt;padding-left: 145pt;text-indent: 0pt;text-align: left;">break;</p><p class="s35" style="padding-top: 2pt;text-indent: 0pt;text-align: center;">.</p><p class="s35" style="padding-top: 2pt;text-indent: 0pt;text-align: center;">.</p><p class="s35" style="padding-top: 2pt;text-indent: 0pt;text-align: center;">.</p><p class="s35" style="padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: center;">case <i>valueN</i>:      <i>statementN;</i></p><p class="s35" style="padding-top: 2pt;padding-left: 57pt;text-indent: 0pt;text-align: center;">break;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">default:                <i>statementN + 1</i>;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The statement tests <span class="s38">choice </span>against the possible values<span class="s12">—</span><span class="s38">value1</span>, <span class="s38">value2</span>, and <span class="s38">value3</span><span class="s12">—</span>in order. If <span class="s38">choice </span>is equal to a value, then the program executes the corresponding <span class="s38">statement</span>. When the program hits a <span class="s35">break </span>statement, it exits the <span class="s35">switch </span>structure. If <span class="s38">choice </span>doesn<span class="s12">’</span>t match any value, then the statement associated with the optional <span class="s35">default </span>is executed.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">The use of <span class="s35">break </span>and <span class="s35">default </span>are optional. If you leave out a <span class="s35">break</span>, however, the program will continue through the remaining statements until it hits a <span class="s35">break </span>or a <span class="s35">default </span>or until the <span class="s35">switch </span>statement ends. Usually you want one <span class="s35">break </span>statement to end each <span class="s35">case</span>.</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark190">52 Chapter 2 </a><span class="s32">n </span>Truth, Branching, and the Game Loop: Guess My Number<a name="bookmark254">&zwnj;</a><a name="bookmark255">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Hi n t</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="519" height="1" alt="image" src="Image_085.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-bottom: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">Although a <span class="s35">default </span>case isn’t required, it’s usually a good idea to have one as a catchall.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="492" height="3" alt="image" src="Image_086.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Here<span class="s12">’</span>s an example to cement the ideas. Suppose <span class="s38">choice </span>is equal to <span class="s38">value2</span>. The program will first test <span class="s38">choice </span>against <span class="s38">value1</span>. Because they<span class="s12">’</span>re not equal, the program will continue. Next, the program will test <span class="s38">choice </span>against <span class="s38">value2</span>. Because they are equal, the program will execute <span class="s38">statement2</span>. Then the program will hit the <span class="s35">break </span>statement and exit the <span class="s35">switch </span>structure.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Tra p</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="517" height="1" alt="image" src="Image_087.png"/></span></p><p class="s19" style="padding-top: 6pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">You can use the <span class="s35">switch </span>statement only to test an <span class="s35">int </span>(or a value that can be treated as an <span class="s35">int</span>, such as a <span class="s35">char </span>or an <span class="s35">enumerator</span>). A <span class="s35">switch </span>statement won’t work with any other type.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_088.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part81.htm">Introducing the Menu Chooser Program</a><a class="toc0" href="part82.htm">Creating Multiple Ways to Branch</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part79.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part81.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
