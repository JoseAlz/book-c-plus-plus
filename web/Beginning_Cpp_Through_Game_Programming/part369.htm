<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Working with Data Members and the Heap</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part368.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part370.htm">Next &gt;</a></p><p style="padding-top: 9pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark11" class="s30">Working with Data Members and the Heap</a></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">You<span class="s12">â€™</span>ve seen how you can use aggregation to declare data members that store objects, but you can also declare data members that are pointers to values on the heap. You might use a data member that points to a value on the heap for some of the same reasons you would use pointers in other situations. For example, you might want to declare a data member for a large 3D scene; however, you might only have access to the 3D scene through a pointer. Unfortunately, problems can arise when you use a data member that points to a value on the heap because of the way that some default object behaviors work. But you can avoid these issues by writing member functions to change these default behaviors.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part370.htm">Introducing the Heap Data Member Program</a><a class="toc0" href="part371.htm">Declaring Data Members that Point to Values on the Heap</a><a class="toc0" href="part372.htm">Declaring and Defining Destructors</a><a class="toc0" href="part373.htm">Declaring and Defining Copy Constructors</a><a class="toc0" href="part374.htm">Overloading the Assignment Operator</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part368.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part370.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
