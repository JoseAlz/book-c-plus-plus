<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Introducing the Pointing Program</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part290.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part292.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><h1 href="#bookmark9">Introducing the Pointing Program</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">The Pointing program demonstrates the mechanics of pointers. The program creates a variable for a score and then creates a pointer to store the address of that variable. The program shows that you can change the value of a variable directly, and the pointer will reflect the change. It also shows that you can change the value of a variable through a pointer. It then demonstrates that you can change a pointer to point to another variable entirely. Finally, the program shows that pointers can work just as easily with objects. Figure 7.1 illustrates the results of the program.</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;"><a href="http://www.courseptr.com/downloads" class="s15" target="_blank">You can download the code for this program from the Course Technology website (</a>www.courseptr.com/downloads). The program is in the Chapter 7 folder; the filename is <span class="s35">pointing.cpp</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><span><img width="425" height="239" alt="image" src="Image_268.gif"/></span></p><p class="s37" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Figure 7.1</p><p class="s19" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">The pointer <span class="s35">pScore </span>first points to the variable <span class="s35">score </span>and then to the variable <span class="s35">newScore</span>, while the pointer <span class="s35">pStr </span>points to the variable <span class="s35">str</span>.</p><p class="s19" style="padding-top: 2pt;padding-left: 295pt;text-indent: 0pt;text-align: left;">Understanding Pointer Basics 225</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">// Pointing</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">// Demonstrates using pointers</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 118%;text-align: left;">#include &lt;iostream&gt; #include &lt;string&gt;</p><p class="s35" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 26pt;text-align: left;">using namespace std; int main()</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: justify;">int* pAPointer; //declare a pointer</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 26pt;text-align: justify;">int* pScore = 0;      //declare and initialize a pointer int score = 1000;</p><p class="s35" style="padding-top: 1pt;padding-left: 62pt;text-indent: 0pt;text-align: justify;">pScore = &amp;score;      //assign pointer pScore address of variable score</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: justify;">cout &lt;&lt; &quot;Assigning &amp;score to pScore\n&quot;;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: justify;">cout &lt;&lt; &quot;&amp;score is: &quot; &lt;&lt; &amp;score &lt;&lt; &quot;\n&quot;;          //address of score variable cout &lt;&lt; &quot;pScore is: &quot; &lt;&lt; pScore &lt;&lt; &quot;\n&quot;;          //address stored in pointer cout &lt;&lt; &quot;score is: &quot; &lt;&lt; score &lt;&lt; &quot;\n&quot;;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">cout &lt;&lt; &quot;*pScore is: &quot; &lt;&lt; *pScore &lt;&lt; &quot;\n\n&quot;; //value pointed to by pointer</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">cout &lt;&lt; &quot;Adding 500 to score\n&quot;; score += 500;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;score is: &quot; &lt;&lt; score &lt;&lt; &quot;\n&quot;;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;*pScore is: &quot; &lt;&lt; *pScore &lt;&lt; &quot;\n\n&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;Adding 500 to *pScore\n&quot;;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">*pScore += 500;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;score is: &quot; &lt;&lt; score &lt;&lt; &quot;\n&quot;;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;*pScore is: &quot; &lt;&lt; *pScore &lt;&lt; &quot;\n\n&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;Assigning &amp;newScore to pScore\n&quot;; int newScore = 5000;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 11pt;text-align: left;">pScore = &amp;newScore;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;&amp;newScore is: &quot; &lt;&lt; &amp;newScore &lt;&lt; &quot;\n&quot;; cout &lt;&lt; &quot;pScore is: &quot; &lt;&lt; pScore &lt;&lt; &quot;\n&quot;;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;newScore is: &quot; &lt;&lt; newScore &lt;&lt; &quot;\n&quot;; cout &lt;&lt; &quot;*pScore is: &quot; &lt;&lt; *pScore &lt;&lt; &quot;\n\n&quot;;</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark809">226 Chapter 7 </a><span class="s32">n </span>Pointers: Tic-Tac-Toe 2.0<a name="bookmark845">&zwnj;</a><a name="bookmark846">&zwnj;</a><a name="bookmark847">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">cout &lt;&lt; &quot;Assigning &amp;str to pStr\n&quot;; string str = &quot;score&quot;;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">string* pStr = &amp;str;      //pointer to string object cout &lt;&lt; &quot;str is: &quot; &lt;&lt; str &lt;&lt; &quot;\n&quot;;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;*pStr is: &quot; &lt;&lt; *pStr &lt;&lt; &quot;\n&quot;;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">cout &lt;&lt; &quot;(*pStr).size() is: &quot; &lt;&lt; (*pStr).size() &lt;&lt; &quot;\n&quot;; cout &lt;&lt; &quot;pStr-&gt;size() is: &quot; &lt;&lt; pStr-&gt;size() &lt;&lt; &quot;\n&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">return 0;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part290.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part292.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
