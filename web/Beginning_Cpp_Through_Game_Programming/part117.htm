<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using for Loops</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part116.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part118.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="part3.htm#bookmark5" class="s30">Using for Loops</a></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">You met one type of loop in Chapter 2<span class="s12">—</span>the <span class="s35">while </span>loop. Well, it<span class="s12">’</span>s time to meet another<span class="s12">—</span>the <span class="s35">for </span>loop. Like its cousin the <span class="s35">while </span>loop, the <span class="s35">for </span>loop lets you repeat a section of code, but <span class="s35">for </span>loops are particularly suited for counting and moving through a sequence of things (like the items in an RPG character<span class="s12">’</span>s inventory).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s19" style="text-indent: 0pt;text-align: right;">81</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark318">82 Chapter 3 </a><span class="s32">n </span>For Loops, Strings, and Arrays: Word Jumble<a name="bookmark358">&zwnj;</a><a name="bookmark359">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">Here<span class="s12">’</span>s the generic form of <span class="s35">for </span>loop:</p><p class="s35" style="padding-top: 6pt;padding-left: 67pt;text-indent: -26pt;line-height: 119%;text-align: left;">for (<i>initialization</i>; <i>test</i>; <i>action</i>) <i>statement</i>;</p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;"><span class="s38">initialization </span>is a statement that sets up some initial condition for the loop. (For example, it might set a counter variable to 0.) The expression <span class="s38">test </span>is tested each time before the loop body executes, just as in a <span class="s35">while </span>loop. If <span class="s38">test </span>is <span class="s35">false</span>, the program moves on to the statement after the loop. If <span class="s38">test </span>is true, the program executes <span class="s38">statement</span>. Next, <span class="s38">action </span>is executed (which often involves incrementing a counter variable). The cycle repeats until <span class="s38">test </span>is <span class="s35">false</span>, at which point the loop ends.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part118.htm">Introducing the Counter Program</a><a class="toc0" href="part119.htm">Counting with for Loops</a><a class="toc0" href="part120.htm">Using Empty Statements in for Loops</a><a class="toc0" href="part121.htm">Nesting for Loops</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part116.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part118.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
