<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Introducing the Abstract Creature Program</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part408.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part410.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part3.htm#bookmark12" class="h1">Introducing the Abstract Creature </a><h1 href="#bookmark12">Program</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The Abstract Creature program demonstrates abstract classes. In the program, I define an abstract class, <span class="s35">Creature</span>, which can be used as a base class for specific creature classes. I define one such class, <span class="s35">Orc</span>. Then, I instantiate an <span class="s35">Orc </span>object and call a member function to get the orc to grunt hello and another member function to display the orc<span class="s12">â€™</span>s health. Figure 10.5 shows the results of the program.</p><p class="s19" style="padding-top: 2pt;text-indent: 0pt;text-align: right;">Using Abstract Classes 353</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><span><img width="482" height="254" alt="image" src="Image_443.gif"/></span></p><p class="s37" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Figure 10.5</p><p class="s19" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">The orc is an object instantiated from a class derived from an abstract class for all creatures.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;"><a href="http://www.courseptr.com/downloads" class="s15" target="_blank">You can download the code for this program from the Course Technology website (</a>www.courseptr.com/downloads). The program is in the Chapter 10 folder; the filename is <span class="s35">abstract_creature.cpp</span>.</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">//Abstract Creature</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">//Demonstrates abstract classes</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 118%;text-align: left;">#include &lt;iostream&gt; using namespace std;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">class Creature //abstract class</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">public:</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">Creature(int health = 100);</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">virtual void Greet() const = 0;      //pure virtual member function virtual void DisplayHealth() const;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">protected:</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">int m_Health;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: -20pt;line-height: 119%;text-align: left;">Creature::Creature(int health): m_Health(health)</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark1189">354 Chapter 10 </a><span class="s32">n </span>Inheritance and Polymorphism: Blackjack</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">{}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">void Creature::DisplayHealth() const</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;Health: &quot; &lt;&lt; m_Health &lt;&lt; endl;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">class Orc : public Creature</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">public:</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;"><a name="bookmark1126">Orc(int health = 120); virtual void Greet() const;</a><a name="bookmark1190">&zwnj;</a></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: -20pt;line-height: 118%;text-align: left;">Orc::Orc(int health): Creature(health)</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">{}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">void Orc::Greet() const</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;The orc grunts hello.\n&quot;;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">int main()</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">Creature* pCreature = new Orc(); pCreature-&gt;Greet();</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">pCreature-&gt;DisplayHealth();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">return 0;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part408.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part410.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
