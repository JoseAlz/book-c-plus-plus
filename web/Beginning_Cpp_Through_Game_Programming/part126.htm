<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Concatenating string Objects</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part125.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part127.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><h1 href="#bookmark5">Concatenating string Objects</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Next, I create a new <span class="s35">string </span>object, <span class="s35">phrase</span>, by concatenating the first three</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">string <span class="p">objects:</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 67pt;text-indent: 0pt;text-align: left;">string phrase = word1 + &quot; &quot; + word2 + word3;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">As a result, <span class="s35">phrase </span>is <span class="s35">&quot;Game Over!!!&quot;</span>.</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a name="bookmark327">Notice that the </a><span class="s35">+ </span>operator, which you<span class="s12">’</span>ve seen work only with numbers, also concatenates <span class="s35">string </span>objects. That<span class="s12">’</span>s because the <span class="s35">+ </span>operator has been overloaded. Now, when you first hear the term <span class="s11">overloaded</span>, you might think it<span class="s12">’</span>s a bad thing<span class="s12">—</span>the operator is about to blow! But it<span class="s12">’</span>s a good thing. Operator over- loading redefines a familiar operator so it works differently when used in a new, previously undefined context. In this case, I use the <span class="s35">+ </span>operator not to add numbers, but to join <span class="s35">string </span>objects. I<span class="s12">’</span>m able to do this only because the <span class="s35">string </span>type specifically overloads the <span class="s35">+ </span>operator and defines it so the operator means <span class="s35">string </span>object concatenation when used with strings.<a name="bookmark376">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part125.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part127.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
