<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Classes: Critter Caretaker</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part322.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part324.htm">Next &gt;</a></p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part3.htm#bookmark10" class="s28" name="bookmark906">Classes: Critter Caretaker</a><a name="bookmark939">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 41pt;text-indent: 0pt;line-height: 15pt;text-align: left;">Object-oriented programming <span class="p">(OOP) is a</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="215" height="259" alt="image" src="Image_308.gif"/></span></p><p style="padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;">different way of thinking about</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">programming. It<span class="s12">’</span>s a modern methodology that<span class="s12">’</span>s used in the creation of the vast majority of games (and other commercial software, too). In OOP, you define different types of objects with relationships to each other that allow the objects to interact. You<span class="s12">’</span>ve already worked with objects from types defined in libraries, but one of the key characteristics of OOP is the ability to make your own types from which you can create objects. In this chapter, you<span class="s12">’</span>ll see how to define your own types and create objects from them. Specifically, you<span class="s12">’</span>ll learn to:</p><p class="s29" style="padding-top: 9pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">n <span class="p">Create new types by defining classes</span></p><p class="s29" style="padding-top: 5pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">n <span class="p">Declare class data members and member functions</span></p><p class="s29" style="padding-top: 5pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">n <span class="p">Instantiate objects from classes</span></p><p class="s29" style="padding-top: 5pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">n <span class="p">Set member access levels</span></p><p class="s29" style="padding-top: 5pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">n <span class="p">Declare static data members and member functions</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part324.htm">Defining New Types</a><a class="toc1" href="part325.htm">Introducing the Simple Critter Program</a><a class="toc1" href="part326.htm">Defining a Class</a><a class="toc1" href="part327.htm">Defining Member Functions</a><a class="toc1" href="part328.htm">Instantiating Objects</a><a class="toc1" href="part329.htm">Accessing Data Members</a><a class="toc1" href="part330.htm">Calling Member Functions</a><a class="toc0" href="part331.htm">Using Constructors</a><a class="toc1" href="part332.htm">Introducing the Constructor Critter Program</a><a class="toc1" href="part333.htm">Declaring and Defining a Constructor</a><a class="toc1" href="part334.htm">Calling a Constructor Automatically</a><a class="toc0" href="part335.htm">Setting Member Access Levels</a><a class="toc1" href="part336.htm">Introducing the Private Critter Program</a><a class="toc1" href="part337.htm">Specifying Public and Private Access Levels</a><a class="toc1" href="part338.htm">Defining Accessor Member Functions</a><a class="toc1" href="part339.htm">Defining Constant Member Functions</a><a class="toc0" href="part340.htm">Using Static Data Members and Member Functions</a><a class="toc1" href="part341.htm">Introducing the Static Critter Program</a><a class="toc1" href="part342.htm">Declaring and Initializing Static Data Members</a><a class="toc1" href="part343.htm">Accessing Static Data Members</a><a class="toc1" href="part344.htm">Declaring and Defining Static Member Functions</a><a class="toc1" href="part345.htm">Calling Static Member Functions</a><a class="toc0" href="part346.htm">Introducing the Critter Caretaker Game</a><a class="toc1" href="part347.htm">Planning the Game</a><a class="toc1" href="part348.htm">Planning the Pseudocode</a><a class="toc1" href="part349.htm">The Critter Class</a><a class="toc1" href="part350.htm">The main() Function</a><a class="toc0" href="part351.htm">Summary</a><a class="toc0" href="part352.htm">Questions and Answers</a><a class="toc0" href="part353.htm">Discussion Questions</a><a class="toc0" href="part354.htm">Exercises</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part322.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part324.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
