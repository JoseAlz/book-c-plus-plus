<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Accepting Values into Parameters</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part208.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part210.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><h1 href="#bookmark7">Accepting Values into Parameters</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">You can send a function values that it accepts into its parameters. This is the most common way to get information into a function.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h3 style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Specifying Parameters</h3><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The second function I declare, <span class="s35">askYesNo2()</span>, accepts a value into a parameter. Specifically, it accepts a value of type <span class="s35">string</span>. You can tell this from the function prototype before <span class="s35">main()</span>:</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">char askYesNo2(string question);</p><p class="s19" style="padding-top: 2pt;padding-left: 259pt;text-indent: 0pt;text-align: left;"><a name="bookmark622">Using Parameters and Return Values 159</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Hin t</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="519" height="1" alt="image" src="Image_195.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">You don’t have to use parameter names in a prototype; all you have to include are the parameter types. For example, the following is a perfectly valid prototype that declares <span class="s35">askYesNo2()</span>, a function with one <span class="s35">string </span>parameter that returns a <span class="s35">char</span>.</p><p class="s35" style="padding-top: 5pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">char askYesNo2(string);</p><p class="s19" style="padding-top: 4pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">Even though you don’t have to use parameter names in prototypes, it’s a good idea to do so. It makes your code clearer, and it’s worth the minor effort.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_196.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">From the header of <span class="s35">askYesNo2()</span>, you can see that the function accepts a <span class="s35">string</span></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">object as a parameter and names that parameter <span class="s35">question</span>.</p><p class="s35" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">char askYesNo2(string question)</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">Unlike prototypes, you must specify parameter names in a function definition. You use a parameter name inside a function to access the parameter value.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Tra p</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="517" height="1" alt="image" src="Image_197.png"/></span></p><p class="s19" style="padding-top: 6pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">The parameter types specified in a function prototype must match the parameter types listed in the function definition. If they don’t, you’ll generate a nasty compile error.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_198.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h3 style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">Passing Values to Parameters</h3><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">The <span class="s35">askYesNo2() </span>function is an improvement over <span class="s35">askYesNo1()</span>. The new function allows you to ask your own personalized question by passing a string prompt to the function. In <span class="s35">main()</span>, I call <span class="s35">askYesNo2() </span>with:</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: justify;">char answer2 = askYesNo2(&quot;Do you wish to save your game?&quot;);</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">This statement calls <span class="s35">askYesNo2() </span>and passes the string literal argument <span class="s35">&quot;Do you wish to save your game?&quot;  </span>to the function.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h3 style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">Using Parameter Values</h3><p class="s35" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">askYesNo2()   <span class="p">accepts  </span>&quot;Do  you  wish  to  save  your  game?&quot;   <span class="p">into  its  parameter </span>question<span class="p">,  which  acts  like  any  other  variable  in  the  function.  In  fact,  I  display </span>question  <span class="p">with:</span></p><p class="s35" style="padding-top: 5pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; question &lt;&lt; &quot; (y/n): &quot;;</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark566">160 Chapter 5 </a><span class="s32">n </span>Functions: Mad Lib<a name="bookmark623">&zwnj;</a><a name="bookmark624">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Hi n t</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="519" height="1" alt="image" src="Image_199.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">Actually, there’s a little more going on behind the scenes here. When the string literal <span class="s35">&quot;Do you wish to save your game?&quot; </span>is passed to <span class="s35">question</span>, a <span class="s35">string </span>object equal to the string literal is created and the <span class="s35">string </span>object gets assigned to <span class="s35">question</span>.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_200.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">Just like <span class="s35">askYesNo1()</span>, <span class="s35">askYesNo2() </span>continues to prompt the user until he enters y or n. Then the function returns that value and ends.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Back in <span class="s35">main()</span>, the returned <span class="s35">char </span>value is assigned to <span class="s35">answer2</span>, which I then display.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part208.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part210.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
