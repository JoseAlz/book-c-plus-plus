<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using Aggregation</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part355.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part357.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark11" class="s30">Using Aggregation</a></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">Game objects are often composed of other objects. For example, in a racing game, a drag racer could be seen as a single object composed of other individual objects, such as a body, four tires, and an engine. Other times, you might see an object as a collection of related objects. In a zookeeper simulation, you might see the zoo as a collection of an arbitrary number of animals. You can mimic these</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s19" style="padding-top: 9pt;text-indent: 0pt;text-align: right;">287</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark1007">288 Chapter 9 </a><span class="s32">n </span>Advanced Classes and Dynamic Memory: Game Lobby<a name="bookmark1040">&zwnj;</a><a name="bookmark1041">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">kinds of relationships among objects in OOP using <span class="s11">aggregation</span><span class="s12">—</span>the combining of  objects  so  that  one  is  part  of  another.  For  example,  you  could  write  a <span class="s35">Drag_Racer  </span>class  that  has  an  <span class="s35">engine  </span>data  member  that<span class="s12">’</span>s  an  <span class="s35">Engine  </span>object.  Or, you could write a <span class="s35">Zoo </span>class that has an <span class="s35">animals </span>data member that is a collection of <span class="s35">Animal  </span>objects.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part357.htm">Introducing the Critter Farm Program</a><a class="toc0" href="part358.htm">Using Object Data Members</a><a class="toc0" href="part359.htm">Using Container Data Members</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part355.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part357.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
