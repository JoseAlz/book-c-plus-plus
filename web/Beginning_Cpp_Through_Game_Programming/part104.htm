<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Seeding the Random Number Generator</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part103.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part105.htm">Next &gt;</a></p><p style="padding-top: 10pt;padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part3.htm#bookmark4" class="h1">Seeding the Random Number </a><h1 href="#bookmark4">Generator</h1></p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Computers generate <span class="s11">pseudorandom </span>numbers<span class="s12">—</span>not truly random numbers<span class="s12">— </span>based on a formula. One way to think about this is to imagine that the computer reads from a huge book of predetermined numbers. By reading from this book, the computer can appear to produce a sequence of random numbers.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">But there<span class="s12">’</span>s a problem: The computer always starts reading the book from the beginning. Because of this, the computer will always produce the same series of <span class="s12">“</span>random<span class="s12">” </span>numbers in a program. In games, this isn<span class="s12">’</span>t something we<span class="s12">’</span>d want. We wouldn<span class="s12">’</span>t, for example, want the same series of dice rolls in a game of craps every time we played.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">A solution to this problem is to tell the computer to start reading from some arbitrary place in the book when a game program begins. This process is called</p><p class="s19" style="padding-top: 2pt;padding-left: 291pt;text-indent: 0pt;text-align: left;"><a name="bookmark296">Generating Random Numbers 71</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">seeding <span class="p">the random number generator. Game programmers give the random number generator a number, called a </span>seed<span class="p">, to determine the starting place in this sequence of pseudorandom numbers.</span></p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">The following code seeds the random number generator:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">srand(static_cast&lt;unsigned int&gt;(time(0)));    //seed random number generator</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;"><a name="bookmark214">Wow, that</a><span class="s12">’</span>s a pretty cryptic looking line, but what it does is simple. It seeds the random number generator based on the current date and time, which is perfect since the current date and time will be different for each run of the program.<a name="bookmark297">&zwnj;</a></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">In terms of the actual code, the <span class="s35">srand() </span>function seeds the random number generator<span class="s12">—</span>you just have to pass it an <span class="s35">unsigned int </span>as a seed. What gets passed to the function here is the return value of <span class="s35">time(0)</span><span class="s12">—</span>a number based on the current system date and time. The code <span class="s35">static_cast&lt;unsigned int&gt; </span>just converts (or <span class="s11">casts</span>) this value to an <span class="s35">unsigned int</span>. Now, you don<span class="s12">’</span>t have to understand all the nuances of this line; the least you need to know is that if you want a program to generate a series of random numbers that are different each time the program is run, your program should execute this line once before calls to <span class="s35">rand()</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Hin t</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="525" height="1" alt="image" src="Image_112.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">A comprehensive explanation of the various forms of casting a value from one type to another is beyond the scope of this book.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_113.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part103.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part105.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
