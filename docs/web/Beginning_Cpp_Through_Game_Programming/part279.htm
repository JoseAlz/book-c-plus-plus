<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>The displayBoard() Function</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part278.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part280.htm">Next &gt;</a></p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;"><h1 href="#bookmark9">The displayBoard() Function</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">This function displays the board passed to it. Because each element in the board is either a space, an <span class="s35">’X’</span>, or an <span class="s35">’O’</span>, the function can display each one. I use a few other characters on my keyboard to draw a decent-looking Tic-Tac-Toe board.</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">void displayBoard(const vector&lt;char&gt;&amp; board)</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;\n\t&quot; &lt;&lt; board[0] &lt;&lt; &quot; | &quot; &lt;&lt; board[1] &lt;&lt; &quot; | &quot; &lt;&lt; board[2]; cout &lt;&lt; &quot;\n\t&quot; &lt;&lt; &quot;———————&quot;;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;\n\t&quot; &lt;&lt; board[3] &lt;&lt; &quot; | &quot; &lt;&lt; board[4] &lt;&lt; &quot; | &quot; &lt;&lt; board[5]; cout &lt;&lt; &quot;\n\t&quot; &lt;&lt; &quot;———————&quot;;</p><p class="s19" style="padding-top: 2pt;padding-left: 272pt;text-indent: 0pt;text-align: left;"><a name="bookmark723">Introducing the Tic-Tac-Toe Game 211</a><a name="bookmark788">&zwnj;</a><a name="bookmark789">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;\n\t&quot; &lt;&lt; board[6] &lt;&lt; &quot; | &quot; &lt;&lt; board[7] &lt;&lt; &quot; | &quot; &lt;&lt; board[8]; cout &lt;&lt; &quot;\n\n&quot;;</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">}</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Notice that the vector that represents the board is passed through a constant reference. This means that the vector is passed efficiently; it is not copied. It also means that the vector is safeguarded against any changes. Since I plan to simply display the board and not change it in this function, this is perfect.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part278.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part280.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
