<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Indexing Multidimensional Arrays</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part142.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part144.htm">Next &gt;</a></p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;"><h1 href="#bookmark5">Indexing Multidimensional Arrays</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The next thing I do in the program is display the tic-tac-toe board. But before I get into the details of that, I want to explain how to index an individual array element. You index an individual element of a multidimensional array by supplying a value for each dimension of the array. That<span class="s12">’</span>s what I do to place an X in the array where a space was:</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: justify;">board[1][0] = ’X’;</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The previous code assigns the character to the element at <span class="s35">board[1][0]  </span>(which was  <span class="s35">’  ’</span>).  Then  I  display  the  tic-tac-toe  board  after  the  move  the  same  way  I displayed it before the move.</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">for (int i = 0; i &lt; ROWS; ++i)</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark344">106 Chapter 3 </a><span class="s32">n </span>For Loops, Strings, and Arrays: Word Jumble<a name="bookmark405">&zwnj;</a><a name="bookmark406">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 82pt;text-indent: 0pt;text-align: left;">for (int j = 0; j &lt; COLUMNS; ++j)</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 103pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; board[i][j];</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; endl;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">By using a pair of nested <span class="s35">for </span>loops, I move through the two-dimensional array and display the character elements as I go, forming a tic-tac-toe board.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part142.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part144.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
