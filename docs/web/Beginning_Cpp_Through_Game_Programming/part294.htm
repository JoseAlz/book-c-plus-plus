<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Assigning Addresses to Pointers</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part293.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part295.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><h1 href="#bookmark9">Assigning Addresses to Pointers</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Because pointers store addresses of objects, you need a way to get addresses into the pointers. One way to do that is to get the memory address of an existing variable and assign it to a pointer. That<span class="s12">’</span>s what I do in the following line, which gets the address of the variable <span class="s35">score </span>and assigns it to <span class="s35">pScore</span>.</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">pScore = &amp;score;      //assign pointer address of variable score</p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">I get the address of <span class="s35">score </span>by preceding the variable name with <span class="s35">&amp;</span>, the <span class="s11">address of </span>operator. (Yes, you<span class="s12">’</span>ve seen the <span class="s35">&amp; </span>symbol before, when it was used as the reference operator. However, in this context, the <span class="s35">&amp; </span>symbol gets the address of an object.)</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">As a result of the preceding line of code, <span class="s35">pScore </span>contains the address of <span class="s35">score</span>. It<span class="s12">’</span>s as if <span class="s35">pScore </span>knows exactly where <span class="s35">score </span>is located in the computer<span class="s12">’</span>s memory. This means you can use <span class="s35">pScore </span>to get to <span class="s35">score </span>and manipulate the value stored in <span class="s35">score</span>. Figure 7.2 serves as a visual illustration of the relationship between <span class="s35">pScore </span>and <span class="s35">score</span>.</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark852">228 Chapter 7 </a><span class="s32">n </span>Pointers: Tic-Tac-Toe 2.0<a name="bookmark853">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s41" style="padding-left: 56pt;text-indent: 0pt;line-height: 9pt;text-align: left;"><span><img width="41" height="13" alt="image" src="Image_273.png"/></span>	<span><img width="32" height="7" alt="image" src="Image_274.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><span><img width="221" height="40" alt="image" src="Image_275.png"/></span></p><p class="s37" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Figure 7.2</p><p class="s19" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">The pointer <span class="s35">pScore </span>points to <span class="s35">score</span>, which stores the value <span class="s35">1000</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;"><a name="bookmark812">To prove that </a><span class="s35">pScore </span>contains the address of <span class="s35">score</span>, I display the address of the variable and the value of the pointer with the following lines.<a name="bookmark854">&zwnj;</a></p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">cout &lt;&lt; &quot;&amp;score is: &quot; &lt;&lt; &amp;score &lt;&lt; &quot;\n&quot;;          //address of score variable cout &lt;&lt; &quot;pScore is: &quot; &lt;&lt; pScore &lt;&lt; &quot;\n&quot;;          //address stored in pointer</p><p class="s35" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">pScore <span class="p">contains </span>0x22ff5c<span class="p">, which is the address of </span>score<span class="p">. (The specific addresses displayed by the Pointing program might be different on your system. The important thing is that the values for </span>pScore <span class="p">and </span>&amp;score <span class="p">are the same.)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part293.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part295.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
