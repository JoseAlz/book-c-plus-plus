<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Introducing the Game Stats 3.0 Program</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part55.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part57.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="part3.htm#bookmark3" class="h1">Introducing the Game Stats 3.0 </a><h1 href="#bookmark3">Program</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The Game Stats 3.0 program uses constants to represent values. First the program calculates a player<span class="s12">â€™</span>s score, and then it calculates the upgrade cost of a unit in a strategy game. Figure 1.8 shows the results.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;"><a href="http://www.courseptr.com/downloads" class="s15" target="_blank">You can download the code for this program from the Course Technology website (</a>www.courseptr.com/downloads). The program is in the Chapter 1 folder; the filename is <span class="s35">game_stats3.cpp</span>.</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark154">30 Chapter 1 </a><span class="s32">n </span>Types, Variables, and Standard I/O: Lost Fortune</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><span><img width="489" height="258" alt="image" src="Image_064.gif"/></span></p><p class="s37" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Figure 1.8</p><p class="s19" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Each calculation involves a constant, making the code behind the scenes clearer.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">// Game Stats 3.0</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">// Demonstrates constants</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 118%;text-align: left;">#include &lt;iostream&gt; using namespace std;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">int main()</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 67pt;text-indent: 0pt;line-height: 119%;text-align: left;">const int ALIEN_POINTS = 150; int aliensKilled = 10;</p><p class="s35" style="padding-left: 67pt;text-indent: 0pt;line-height: 118%;text-align: left;">int score = aliensKilled * ALIEN_POINTS; cout &lt;&lt; &quot;score: &quot; &lt;&lt; score &lt;&lt; endl;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 67pt;text-indent: 0pt;text-align: left;">enum difficulty {NOVICE, EASY, NORMAL, HARD, UNBEATABLE};</p><p class="s35" style="padding-top: 2pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">difficulty myDifficulty = EASY;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 67pt;text-indent: 0pt;text-align: left;">enum shipCost {FIGHTER_COST = 25, BOMBER_COST, CRUISER_COST = 50};</p><p class="s35" style="padding-top: 2pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">shipCost myShipCost = BOMBER_COST;</p><p class="s35" style="padding-top: 2pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;\nTo upgrade my ship to a Cruiser will cost &quot;</p><p class="s35" style="padding-top: 2pt;padding-left: 48pt;text-indent: 0pt;text-align: center;">&lt;&lt; (CRUISER_COST - myShipCost) &lt;&lt; &quot; Resource Points.\n&quot;;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">return 0;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p class="s19" style="padding-top: 2pt;padding-left: 318pt;text-indent: 0pt;text-align: left;"><a name="bookmark64">Working with Constants 31</a><a name="bookmark155">&zwnj;</a><a name="bookmark156">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part55.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part57.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
