<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Summary</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part150.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part152.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="#bookmark6" class="s30">Summary</a></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">In this chapter, you learned the following concepts:</p><p style="padding-top: 10pt;padding-left: 65pt;text-indent: -11pt;line-height: 107%;text-align: left;"><span class="s29">n </span>The <span class="s35">for </span>loop lets you repeat a section of code. In a <span class="s35">for </span>loop, you can provide an initialization statement, an expression to test, and an action to take after each loop iteration.</p><p class="s29" style="padding-top: 5pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">n <span class="s35">for </span><span class="p">loops are often used for counting or looping through a sequence.</span></p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 91%;text-align: left;"><span class="s29">n </span>Objects are encapsulated, cohesive entities that combine data (called <span class="s11">data members</span>) and functions (called <span class="s11">member functions</span>).</p><p style="padding-top: 4pt;padding-left: 65pt;text-indent: -11pt;text-align: left;"><span class="s29">n </span><span class="s35">string </span>objects (often just called <span class="s11">strings</span>) are defined in the file <span class="s35">string</span>, which is part of the standard library. <span class="s35">string </span>objects allow you to store a sequence of characters and also have member functions.</p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">n   <span class="s35">string </span><span class="p">objects are defined so that they work intuitively with familiar operators, such as the concatenation operator and the relational operators.</span></p><p class="s19" style="padding-top: 2pt;text-indent: 0pt;text-align: right;"><a name="bookmark419">Questions and Answers 111</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;"><span class="s29">n </span>All <span class="s35">string </span>objects have member functions, including those for determining a <span class="s35">string </span>object<span class="s12">’</span>s length, determining whether or not a <span class="s35">string </span>object is empty, finding substrings, and removing substrings.</p><p class="s29" style="padding-top: 5pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">n <span class="p">Arrays provide a way to store and access sequences of any type.</span></p><p class="s29" style="padding-top: 5pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">n <span class="p">A limitation of arrays is that they have a fixed length.</span></p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 107%;text-align: left;"><span class="s29">n </span>You can access individual elements of <span class="s35">string </span>objects and arrays through the subscripting operator.</p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 107%;text-align: left;"><a name="bookmark352"><span class="s29">n </span></a>Bounds checking is not enforced when attempts are made to access individual elements of <span class="s35">string </span>objects or arrays. Therefore, bounds checking is up to the programmer.<a name="bookmark420">&zwnj;</a></p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;text-align: left;"><span class="s29">n </span>C-style strings are character arrays terminated with the null character. They are the standard way to represent strings in the C language. And even though C-style strings are perfectly legal in C<span class="s14">þþ</span>, <span class="s35">string </span>objects are the preferred way to work with sequences of characters.</p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">n <span class="p">Multidimensional arrays allow for access to array elements using multiple subscripts. For example, a chessboard can be represented as a two-dimensional array, 8 8 elements.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part150.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part152.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
