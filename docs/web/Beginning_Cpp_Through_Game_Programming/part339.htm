<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Defining Constant Member Functions</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part338.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part340.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><h1 href="#bookmark11">Defining Constant Member Functions</h1></p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">A <span class="s11">constant member function </span>can<span class="s12">’</span>t modify a data member of its class or call a non-constant member function of its class. Why restrict what a member function can do? Again, it goes back to the tenet of asking only for what you</p><p class="s19" style="padding-top: 2pt;padding-left: 191pt;text-indent: 0pt;text-align: left;"><a name="bookmark969">Using Static Data Members and Member Functions 269</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">need. If you don<span class="s12">’</span>t need to change any data members in a member function, then it<span class="s12">’</span>s a good idea to declare that member function to be constant. It protects you from accidentally altering a data member in the member function, and it makes your intentions clear to other programmers.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Tra p</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="519" height="1" alt="image" src="Image_320.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;"><a name="bookmark922">Okay, I lied a little. A constant member function can alter a static data member. You’ll learn about static data members a bit later in this chapter, in the “Declaring and Initializing Static Data Members” section. Also, if you qualify a data member with the </a><span class="s35">mutable </span>keyword, then even a constant member function can modify it. For now, though, don’t worry about either of these exceptions.<a name="bookmark970">&zwnj;</a></p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_321.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">You can declare a constant member function by putting the keyword <span class="s35">const </span>at the end of the function header. That<span class="s12">’</span>s what I do in <span class="s35">Critter </span>with the following line, which declares <span class="s35">GetHunger() </span>to be a constant member function.</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: justify;">int GetHunger() const;</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">This  means  that  <span class="s35">GetHunger()  </span>can<span class="s12">’</span>t  change  the  value  of  any  non-static  data member declared in the <span class="s35">Critter </span>class, nor can it call any non-constant <span class="s35">Critter </span>member function. I made <span class="s35">GetHunger()  </span>constant because it only returns a value and doesn<span class="s12">’</span>t need to modify any data member. Generally, <span class="s35">Get </span>member functions can be defined as constant.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part338.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part340.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
