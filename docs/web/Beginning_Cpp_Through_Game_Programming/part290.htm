<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Understanding Pointer Basics</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part289.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part291.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark9" class="s30">Understanding Pointer Basics</a></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Pointers have a reputation for being difficult to understand. In reality, the essence of pointers is quite simple<span class="s12">—</span>a <span class="s11">pointer </span>is a variable that can contain a memory address. Pointers give you the ability to work directly and efficiently with computer memory. Like iterators from the STL, they<span class="s12">’</span>re often used to access the contents of other variables. But before you can put pointers to good use in your game programs, you have to understand the basics of how they work.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s19" style="text-indent: 0pt;text-align: right;">223</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark808">224 Chapter 7 </a><span class="s32">n </span>Pointers: Tic-Tac-Toe 2.0<a name="bookmark843">&zwnj;</a><a name="bookmark844">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Hi n t</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="519" height="1" alt="image" src="Image_266.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">Computer memory is a lot like a neighborhood, but instead of houses in which people store their stuff, you have memory locations where you can store data. Just like a neighborhood where houses sit side by side, labeled with addresses, chunks of computer memory sit side by side, labeled with addresses. In a neighborhood, you can use a slip of paper with a street address on it to get to a particular house (and to the stuff stored inside it). In a computer, you can use a pointer with a memory address in it to get to a particular memory location (and to the stuff stored inside it).</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_267.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part291.htm">Introducing the Pointing Program</a><a class="toc0" href="part292.htm">Declaring Pointers</a><a class="toc0" href="part293.htm">Initializing Pointers</a><a class="toc0" href="part294.htm">Assigning Addresses to Pointers</a><a class="toc0" href="part295.htm">Dereferencing Pointers</a><a class="toc0" href="part296.htm">Reassigning Pointers</a><a class="toc0" href="part297.htm">Using Pointers to Objects</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part289.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part291.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
