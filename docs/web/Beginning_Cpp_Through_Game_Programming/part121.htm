<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Nesting for Loops</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part120.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part122.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><h1 href="#bookmark5">Nesting for Loops</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">You can nest <span class="s35">for </span>loops by putting one inside the other. That<span class="s12">’</span>s what I did in the following section of code, which counts out the elements of a grid. The outer loop, which begins:</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">for (int i = 0; i &lt; ROWS; ++i)</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">simply executes its loop body <span class="s35">ROWS </span>(five) times. But it just so happens that there<span class="s12">’</span>s another <span class="s35">for </span>loop inside this loop, which begins:</p><p class="s35" style="padding-top: 5pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">for (int j = 0; j &lt; COLUMNS; ++j)</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">As a result, the inner loop executes in full for each iteration of the outer loop. In this case, that means the inner loop executes <span class="s35">COLUMNS </span>(three) times, for the <span class="s35">ROWS </span>(five) times the outer loop iterates, for a total of 15 times. Specifically, here<span class="s12">’</span>s what happens:</p><p style="padding-top: 9pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">1. The outer <span class="s35">for </span>loop declares <span class="s35">i </span>and initializes it to 0. Since <span class="s35">i </span>is less than</p><p style="padding-left: 65pt;text-indent: 0pt;text-align: left;"><span class="s35">ROWS </span>(5), the program enters the outer loop<span class="s12">’</span>s body.</p><p style="padding-top: 6pt;padding-left: 65pt;text-indent: -11pt;line-height: 107%;text-align: left;">2. The inner loop declares <span class="s35">j </span>and initializes it to 0. Since <span class="s35">j </span>is less than <span class="s35">COLUMNS </span>(3), the program enters its loop body, sending the values of <span class="s35">i </span>and <span class="s35">j </span>to <span class="s35">cout</span>, which displays 0, 0.</p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">3. The program reaches the end of the body of the inner loop and increments <span class="s35">j </span>to 1. Since <span class="s35">j </span>is still less than <span class="s35">COLUMNS </span>(3), the program executes the inner loop<span class="s12">’</span>s body again, displaying 0, 1.</p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">4. The program reaches the end of the inner loop<span class="s12">’</span>s body and increments <span class="s35">j </span>to 2. Since <span class="s35">j </span>is still less than <span class="s35">COLUMNS </span>(3), the program executes the inner loop<span class="s12">’</span>s body again, displaying 0, 2.</p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">5. The program reaches the end of the inner loop<span class="s12">’</span>s body and increments <span class="s35">j </span>to 3. This time, however, <span class="s35">j </span>is not less than <span class="s35">COLUMNS </span>(3) and the inner loop ends.</p><p style="padding-top: 5pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">6. The program finishes the first iteration of the outer loop by sending <span class="s35">endl</span></p><p style="padding-left: 65pt;text-indent: 0pt;text-align: left;">to <span class="s35">cout</span>, ending the first row.</p><p style="padding-top: 6pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">7. The program reaches the end of the outer loop<span class="s12">’</span>s body and increments <span class="s35">i </span>to 1. Since <span class="s35">i </span>is less than <span class="s35">ROWS </span>(5), the program enters the outer loop<span class="s12">’</span>s body again.</p><p class="s19" style="padding-top: 2pt;padding-left: 325pt;text-indent: 0pt;text-align: left;"><a name="bookmark322">Understanding Objects 87</a><a name="bookmark366">&zwnj;</a><a name="bookmark367">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 8pt;padding-left: 65pt;text-indent: -11pt;line-height: 107%;text-align: left;">8. The program reaches the inner loop, which starts from the beginning once again, by declaring and initializing <span class="s35">j </span>to 0. The program goes through the process I described in Steps 2 through 7, displaying the sec- ond row of the grid. This process continues until all five rows have been displayed.</p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Again, the important thing to remember is that the inner loop is executed in full for each iteration of the outer loop.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part120.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part122.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
