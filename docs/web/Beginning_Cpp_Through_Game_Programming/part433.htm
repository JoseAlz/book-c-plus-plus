<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>A</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part432.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part434.htm">Next &gt;</a></p><p class="s34" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">A</p><p class="s68" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part407.htm#bookmark1186" class="s69">abstract classes, </a>352<a href="part411.htm#bookmark1194" class="s79">–</a><a href="part424.htm#bookmark1224" class="s69">356, </a><a href="part425.htm#bookmark1228" class="s69">380, 382</a></p><p class="s74" style="padding-left: 64pt;text-indent: -12pt;text-align: left;"><a href="part407.htm#bookmark1186" class="s75">Abstract Creature program, </a>352<a href="part409.htm#bookmark1189" class="s85">–</a><a href="part409.htm#bookmark1189" class="s75">354</a></p><p class="s74" style="padding-top: 3pt;padding-left: 33pt;text-indent: -12pt;text-align: left;"><a href="part409.htm#bookmark1189" class="s75">declaring pure virtual functions, </a>354<a href="part410.htm#bookmark1192" class="s85">–</a><a href="part410.htm#bookmark1192" class="s75">355</a></p><p class="s74" style="padding-left: 21pt;text-indent: 0pt;text-align: left;"><a href="part410.htm#bookmark1192" class="s75">deriving classes from, </a>355<a href="part411.htm#bookmark1194" class="s85">–</a><a href="part410.htm#bookmark1192" class="s75">356 virtual functions and, 355</a></p><p class="s68" style="padding-left: 21pt;text-indent: -12pt;text-align: left;"><a href="part407.htm#bookmark1186" class="s69">Abstract Creature program, </a>352<a href="part409.htm#bookmark1189" class="s79">–</a><a href="part409.htm#bookmark1189" class="s69">354</a></p><p class="s68" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">abstraction</p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"><a href="part209.htm#bookmark624" class="s75">encapsulation and, 160</a></p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"><a href="part204.htm#bookmark615" class="s75">functions, 155</a></p><p class="s68" style="padding-left: 9pt;text-indent: 0pt;text-align: left;"><a href="part391.htm#bookmark1155" class="s69">access control, </a>337<a href="part395.htm#bookmark1163" class="s79">–</a><a href="part395.htm#bookmark1163" class="s69">340</a></p><p class="s74" style="padding-left: 33pt;text-indent: -12pt;text-align: left;"><a href="part393.htm#bookmark1158" class="s75">Simple Boss 2.0 program, </a>338<a href="part394.htm#bookmark1159" class="s85">–</a><a href="part394.htm#bookmark1159" class="s75">339</a></p><p style="padding-left: 33pt;text-indent: -12pt;text-align: left;"><a href="part395.htm#bookmark1163" class="s75">using access modiﬁers when deriving classes, 340</a></p><p class="s74" style="padding-left: 33pt;text-indent: -12pt;text-align: left;"><a href="part394.htm#bookmark1159" class="s75">using access modiﬁers with class members, </a>339<a href="part395.htm#bookmark1163" class="s85">–</a><a href="part395.htm#bookmark1163" class="s75">340</a></p><p class="s68" style="padding-left: 9pt;text-indent: 0pt;line-height: 10pt;text-align: left;">access modiﬁers</p><p class="s74" style="padding-left: 21pt;text-indent: 0pt;text-align: left;"><a href="part395.htm#bookmark1163" class="s75">using when deriving classes, </a>340 using with class members,</p><p class="s74" style="padding-left: 33pt;text-indent: 0pt;line-height: 10pt;text-align: left;">339<a href="part395.htm#bookmark1163" class="s85">–</a><a href="part395.htm#bookmark1163" class="s75">340</a></p><p class="s72" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">access_global() <a href="part217.htm#bookmark640" class="s69">function, </a><span class="s68">168 accessing</span></p><p style="padding-left: 21pt;text-indent: 0pt;text-align: left;"><a href="part315.htm#bookmark891" class="s75">array elements, 246</a></p><p class="s74" style="padding-left: 21pt;text-indent: 0pt;text-align: left;"><a href="part327.htm#bookmark948" class="s75">data members, </a>259<a href="part329.htm#bookmark952" class="s85">–</a><a href="part329.htm#bookmark952" class="s75">260</a></p><p class="s74" style="padding-left: 21pt;text-indent: 0pt;text-align: left;"><a href="part217.htm#bookmark640" class="s75">global variables, </a>168 member functions of array</p><p style="padding-left: 33pt;text-indent: 0pt;text-align: left;"><a href="part136.htm#bookmark393" class="s75">element, 100</a></p><p class="s74" style="padding-left: 33pt;text-indent: -12pt;text-align: left;"><a href="part171.htm#bookmark503" class="s75">member functions of vector element, </a>129<a href="part172.htm#bookmark505" class="s85">–</a><a href="part172.htm#bookmark505" class="s75">130</a></p><p style="padding-left: 21pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part250.htm#bookmark739" class="s75">reference values, 190</a></p><p class="s74" style="padding-left: 21pt;text-indent: 0pt;text-align: left;"><a href="part341.htm#bookmark975" class="s75">static data members, </a>272<a href="part343.htm#bookmark978" class="s85">–</a><a href="part343.htm#bookmark978" class="s75">273</a></p><p style="padding-left: 21pt;text-indent: -12pt;text-align: left;"><a href="part337.htm#bookmark965" class="s69">accessor member functions, 267</a><a href="part338.htm#bookmark967" class="s79">– </a><a href="part351.htm#bookmark997" class="s69">268, 282</a></p><p class="s72" style="padding-left: 9pt;text-indent: 0pt;text-align: left;">action <span class="s68">statement, </span>for <a href="part117.htm#bookmark359" class="s69">loop, </a><a href="part359.htm#bookmark1046" class="s69">82 Add() member function, </a><span class="s68">292 Add New Item dialog box,</span></p><p style="padding-left: 21pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part428.htm#bookmark1235" class="s69">386ﬁg</a></p><p class="s68" style="padding-left: 9pt;text-indent: 0pt;line-height: 10pt;text-align: left;">addition (<span class="s77">þ</span><a href="part32.htm#bookmark113" class="s69">) operator, </a><a href="part125.htm#bookmark375" class="s69">14, 92</a></p><p style="padding-left: 9pt;text-indent: 0pt;text-align: left;"><a href="part319.htm#bookmark898" class="s69">address, variable, 249</a></p><p class="s68" style="padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;text-align: left;">advanced classes</p><p class="s74" style="padding-left: 33pt;text-indent: -11pt;text-align: left;"><a href="part354.htm#bookmark1038" class="s75">aggregation, </a>287<a href="part359.htm#bookmark1046" class="s85">–</a>292 container data members,</p><p class="s74" style="padding-left: 45pt;text-indent: 0pt;line-height: 10pt;text-align: left;">291<a href="part359.htm#bookmark1046" class="s85">–</a><a href="part359.htm#bookmark1046" class="s75">292</a></p><p class="s74" style="padding-left: 45pt;text-indent: -11pt;text-align: left;"><a href="part356.htm#bookmark1041" class="s75">Critter Farm program, </a>288<a href="part357.htm#bookmark1042" class="s85">–</a><a href="part357.htm#bookmark1042" class="s75">290</a></p><p class="s74" style="padding-left: 45pt;text-indent: -11pt;text-align: left;"><a href="part357.htm#bookmark1042" class="s75">object data members, </a>290<a href="part358.htm#bookmark1044" class="s85">–</a><a href="part358.htm#bookmark1044" class="s75">291</a></p><p style="padding-left: 33pt;text-indent: -11pt;text-align: left;"><a href="part361.htm#bookmark1051" class="s75">friend functions creating, 295</a></p><p class="s74" style="padding-left: 45pt;text-indent: -11pt;text-align: left;"><a href="part359.htm#bookmark1046" class="s75">Friend Critter program, </a>292<a href="part361.htm#bookmark1049" class="s85">–</a><a href="part361.htm#bookmark1049" class="s75">294</a></p><p class="s74" style="padding-left: 33pt;text-indent: -12pt;text-align: left;"><a href="part374.htm#bookmark1080" class="s75">Game Lobby program, </a>315<a href="part382.htm#bookmark1096" class="s85">–</a><a href="part382.htm#bookmark1096" class="s75">325</a></p><p class="s73" style="padding-left: 33pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Lobby <a href="part376.htm#bookmark1084" class="s75">class, </a><span class="s74">318</span><a href="part377.htm#bookmark1088" class="s85">–</a><a href="part377.htm#bookmark1088" class="s75">320</a></p><p class="s73" style="padding-left: 45pt;text-indent: -11pt;text-align: left;">Lobby::AddPlayer() <a href="part377.htm#bookmark1088" class="s75">member function, </a><span class="s74">320</span><a href="part378.htm#bookmark1090" class="s85">–</a><a href="part378.htm#bookmark1090" class="s75">322</a></p><p class="s73" style="padding-left: 45pt;text-indent: -11pt;text-align: left;">Lobby::Clear() <a href="part378.htm#bookmark1090" class="s75">member function, </a><span class="s74">322</span><a href="part380.htm#bookmark1092" class="s85">–</a><a href="part380.htm#bookmark1092" class="s75">323</a></p><p class="s73" style="padding-left: 33pt;text-indent: 0pt;text-align: left;">Lobby::RemovePlayer()</p><p style="padding-left: 45pt;text-indent: 0pt;text-align: left;"><a href="part378.htm#bookmark1090" class="s75">member function, 322</a></p><p class="s73" style="padding-left: 45pt;text-indent: -11pt;text-align: left;">main() <a href="part381.htm#bookmark1094" class="s75">function, </a><span class="s74">324</span><a href="part382.htm#bookmark1096" class="s85">–</a><a href="part382.htm#bookmark1096" class="s75">325</a></p><p class="s73" style="padding-left: 45pt;text-indent: -11pt;text-align: left;">operator&lt;&lt;() <a href="part380.htm#bookmark1092" class="s75">member function, </a><span class="s74">323</span><a href="part381.htm#bookmark1094" class="s85">–</a><a href="part381.htm#bookmark1094" class="s75">324</a></p><p class="s73" style="padding-left: 33pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Player <a href="part375.htm#bookmark1082" class="s75">class, </a><span class="s74">316</span><a href="part376.htm#bookmark1084" class="s85">–</a><a href="part376.htm#bookmark1084" class="s75">318</a></p><p class="s74" style="padding-left: 9pt;text-indent: 11pt;text-align: justify;"><a href="part361.htm#bookmark1051" class="s75">operator overloading, </a>295<a href="part363.htm#bookmark1054" class="s85">–</a>296 <span class="s72">again </span><a href="part87.htm#bookmark266" class="s69">character, looping, </a><b>57</b><a href="part88.htm#bookmark268" class="s79">–</a><a href="part354.htm#bookmark1038" class="s69">58 aggregation, </a><b>287</b><a href="part359.htm#bookmark1046" class="s79">–</a><a href="part359.htm#bookmark1046" class="s69">292</a></p><p class="s74" style="padding-left: 33pt;text-indent: -12pt;text-align: left;"><a href="part358.htm#bookmark1044" class="s75">container data members, </a>291<a href="part359.htm#bookmark1046" class="s85">–</a><a href="part359.htm#bookmark1046" class="s75">292</a></p><p class="s74" style="padding-left: 33pt;text-indent: -12pt;text-align: left;"><a href="part356.htm#bookmark1041" class="s75">Critter Farm program, </a>288<a href="part357.htm#bookmark1042" class="s85">–</a><a href="part357.htm#bookmark1042" class="s75">290</a></p><p style="padding-left: 21pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part382.htm#bookmark1097" class="s75">deﬁned, 325</a></p><p class="s74" style="padding-left: 33pt;text-indent: -12pt;text-align: left;"><a href="part357.htm#bookmark1042" class="s75">object data members, </a>290<a href="part358.htm#bookmark1044" class="s85">–</a><a href="part358.htm#bookmark1044" class="s75">291</a></p><p style="padding-left: 21pt;text-indent: -11pt;text-align: left;"><a href="part269.htm#bookmark771" class="s69">AI (Artiﬁcial Intelligence), 203</a></p><p class="s19" style="padding-top: 7pt;text-indent: 0pt;text-align: right;">399</p><p class="s19" style="padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">400 Index</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s68" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part174.htm#bookmark508" class="s69">algorithms, </a>131<a href="part179.htm#bookmark516" class="s79">–</a><a href="part195.htm#bookmark547" class="s69">135, 146</a></p><p style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part155.htm#bookmark474" class="s75">deﬁned, 116</a></p><p class="s73" style="padding-left: 52pt;text-indent: 0pt;text-align: left;">ﬁnd()<a href="part177.htm#bookmark513" class="s75">, 134</a></p><p class="s74" style="padding-left: 64pt;text-indent: -12pt;text-align: left;"><a href="part174.htm#bookmark508" class="s75">High Scores program, </a>131<a href="part176.htm#bookmark510" class="s85">–</a><a href="part176.htm#bookmark510" class="s75">133</a></p><p style="padding-left: 52pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part176.htm#bookmark510" class="s75">preparing to use, 133</a></p><p class="s73" style="padding-left: 52pt;text-indent: 0pt;text-align: left;">random_shufﬂe()<a href="part177.htm#bookmark513" class="s75">, </a><span class="s74">134</span><a href="part179.htm#bookmark516" class="s85">–</a><a href="part179.htm#bookmark516" class="s75">135</a></p><p class="s73" style="padding-left: 52pt;text-indent: 0pt;text-align: left;">sort()<a href="part179.htm#bookmark516" class="s75">, 135</a></p><p class="s68" style="padding-left: 53pt;text-indent: -12pt;text-align: left;"><a href="part363.htm#bookmark1054" class="s69">allocating dynamic memory, </a>296<a href="part368.htm#bookmark1066" class="s79">–</a><a href="part368.htm#bookmark1066" class="s69">303</a></p><p class="s74" style="padding-left: 64pt;text-indent: -12pt;text-align: left;"><a href="part367.htm#bookmark1063" class="s75" name="bookmark1254">avoiding memory leaks, </a>301<a href="part368.htm#bookmark1066" class="s85">–</a><a href="part368.htm#bookmark1066" class="s75">303</a></p><p class="s73" style="padding-left: 52pt;text-indent: 0pt;line-height: 10pt;text-align: left;">delete <a href="part366.htm#bookmark1061" class="s75">operator, </a><span class="s74">300</span><a href="part367.htm#bookmark1063" class="s85">–</a><a href="part367.htm#bookmark1063" class="s75">301</a></p><p class="s74" style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part364.htm#bookmark1058" class="s75">Heap program, </a>297<a href="part365.htm#bookmark1060" class="s85">–</a><a href="part365.htm#bookmark1060" class="s75">299</a></p><p class="s73" style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a name="bookmark1255">new </a><a href="part365.htm#bookmark1060" class="s75">operator, </a><span class="s74">299</span><a href="part366.htm#bookmark1061" class="s85">–</a><a href="part366.htm#bookmark1061" class="s75">300</a></p><p class="s68" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">altering</p><p style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part219.htm#bookmark643" class="s75">global variables, 169</a></p><p style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part170.htm#bookmark500" class="s75">iterators, 128</a></p><p class="s74" style="padding-left: 64pt;text-indent: -12pt;text-align: left;"><a href="part312.htm#bookmark885" class="s75">object through returning pointers, </a>243<a href="part313.htm#bookmark888" class="s85">–</a><a href="part313.htm#bookmark888" class="s75">244</a></p><p style="padding-left: 64pt;text-indent: -12pt;text-align: left;"><a href="part266.htm#bookmark768" class="s75">object through returning references, 202</a></p><p class="s74" style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part250.htm#bookmark739" class="s75">reference values, </a>190<a href="part252.htm#bookmark742" class="s85">–</a><a href="part50.htm#bookmark144" class="s75">191 value of variable, 26</a></p><p class="s68" style="padding-left: 53pt;text-indent: -12pt;text-align: left;"><a href="part43.htm#bookmark135" class="s69">American Standard Code for Information Interchange (ASCII), </a><a href="part430.htm#bookmark1247" class="s69">22, </a>393<a href="part431.htm#bookmark1248" class="s79">–</a><a href="part431.htm#bookmark1248" class="s69">396</a></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part92.htm#bookmark277" class="s69">AND (&amp;&amp;) operator, 61</a><a href="part92.htm#bookmark277" class="s76">tbl</a><a href="part112.htm#bookmark310" class="s69">, 77</a></p><p class="s72" style="padding-left: 53pt;text-indent: -12pt;text-align: left;">announceWinner()<a href="part283.htm#bookmark797" class="s69">function, Tic-Tac-Toe game, 217</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part14.htm#bookmark84" class="s69">ANSI (ANSI/ISO) standard, </a><a href="part252.htm#bookmark742" class="s69">5 argument variable, </a><a href="part259.htm#bookmark755" class="s69">191, 197</a></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part103.htm#bookmark294" class="s69">arguments, 70</a></p><p class="s74" style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part243.htm#bookmark682" class="s75">versus parameters, </a>184 passing references to alter,</p><p class="s74" style="padding-left: 57pt;text-indent: 0pt;line-height: 10pt;text-align: center;">191<a href="part255.htm#bookmark748" class="s85">–</a><a href="part255.htm#bookmark748" class="s75">194</a></p><p class="s68" style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part30.htm#bookmark111" class="s69">arithmetic operators, </a>13<span class="s71">–</span><a href="part34.htm#bookmark116" class="s69">15</a></p><p style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part32.htm#bookmark113" class="s75">adding, 14</a></p><p class="s74" style="padding-left: 64pt;text-indent: -12pt;text-align: left;"><a href="part30.htm#bookmark111" class="s75">Expensive Calculator program, </a>13<a href="part32.htm#bookmark113" class="s85">–</a><a href="part32.htm#bookmark113" class="s75">14</a></p><p class="s74" style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part32.htm#bookmark113" class="s75">ﬂoating point division, </a>14<a href="part34.htm#bookmark116" class="s85">–</a><a href="part32.htm#bookmark113" class="s75">15 integer division, </a>14<a href="part34.htm#bookmark116" class="s85">–</a><a href="part34.htm#bookmark116" class="s75">15</a></p><p style="padding-left: 52pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part34.htm#bookmark116" class="s75">modulus operator, 15</a></p><p style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part32.htm#bookmark113" class="s75">multiplying, 14</a></p><p style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part34.htm#bookmark116" class="s75">order of operations, </a><a href="part32.htm#bookmark113" class="s75">15 subtracting, 14</a></p><p class="s68" style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part313.htm#bookmark888" class="s69">Array Passer program, </a>244<a href="part315.htm#bookmark891" class="s79">–</a><a href="part131.htm#bookmark386" class="s69">246 arrays, </a>96<a href="part143.htm#bookmark406" class="s79">–</a><a href="part143.htm#bookmark406" class="s69">106</a></p><p style="padding-left: 64pt;text-indent: -12pt;text-align: left;"><a href="part136.htm#bookmark393" class="s75">accessing member functions of array element, 100</a></p><p class="s74" style="padding-left: 52pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part136.htm#bookmark393" class="s75">bounds checking, </a>100<a href="part138.htm#bookmark396" class="s85">–</a><a href="part138.htm#bookmark396" class="s75">101</a></p><p class="s74" style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part134.htm#bookmark389" class="s75">creating, </a>98<a href="part135.htm#bookmark391" class="s85">–</a><a href="part135.htm#bookmark391" class="s75">99</a></p><p class="s74" style="padding-left: 64pt;text-indent: -12pt;text-align: left;"><a href="part131.htm#bookmark386" class="s75">Hero&#39;s Inventory program, </a>96<a href="part134.htm#bookmark389" class="s85">–</a><a href="part134.htm#bookmark389" class="s75">98</a></p><p class="s74" style="padding-left: 52pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part135.htm#bookmark391" class="s75">indexing, </a>99<a href="part136.htm#bookmark393" class="s85">–</a><a href="part136.htm#bookmark393" class="s75">100</a></p><p class="s74" style="padding-left: 52pt;text-indent: 0pt;text-align: left;"><a href="part139.htm#bookmark401" class="s75">multidimensional, </a>103<a href="part143.htm#bookmark406" class="s85">–</a><a href="part143.htm#bookmark406" class="s75">106</a></p><p style="padding-top: 5pt;padding-left: 38pt;text-indent: 0pt;text-align: left;"><a href="part141.htm#bookmark403" class="s75">creating, 105</a></p><p class="s74" style="padding-left: 38pt;text-indent: 0pt;text-align: left;"><a href="part141.htm#bookmark403" class="s75">indexing, </a>105<a href="part143.htm#bookmark406" class="s85">–</a>106 Tic-Tac-Toe Board</p><p class="s74" style="padding-left: 50pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part139.htm#bookmark401" class="s75">program, </a>103<a href="part141.htm#bookmark403" class="s85">–</a><a href="part141.htm#bookmark403" class="s75">105</a></p><p class="s74" style="padding-left: 38pt;text-indent: -11pt;text-align: left;"><a href="part313.htm#bookmark888" class="s75">pointers and, </a>244<a href="part317.htm#bookmark895" class="s85">–</a>248 Array Passer program,</p><p class="s74" style="padding-left: 50pt;text-indent: 0pt;line-height: 10pt;text-align: left;">244<a href="part315.htm#bookmark891" class="s85">–</a><a href="part315.htm#bookmark891" class="s75">246</a></p><p class="s74" style="padding-left: 38pt;text-indent: 0pt;text-align: left;"><a href="part315.htm#bookmark891" class="s75">constant pointer, </a>246<a href="part316.htm#bookmark893" class="s85">–</a>247 passing and returning,</p><p class="s74" style="padding-left: 50pt;text-indent: 0pt;line-height: 10pt;text-align: left;">247<a href="part317.htm#bookmark895" class="s85">–</a><a href="part317.htm#bookmark895" class="s75">248</a></p><p class="s74" style="padding-left: 26pt;text-indent: 0pt;text-align: left;"><a href="part156.htm#bookmark477" class="s75">versus vectors, </a><a href="part195.htm#bookmark547" class="s75">117, </a>146<a href="part196.htm#bookmark550" class="s85">–</a><a href="part196.htm#bookmark550" class="s75">147</a></p><p style="padding-left: 26pt;text-indent: -12pt;text-align: left;"><a href="part269.htm#bookmark771" class="s69">Artiﬁcial Intelligence (AI), 203</a></p><p class="s68" style="padding-left: 26pt;text-indent: -12pt;text-align: justify;"><a href="part43.htm#bookmark135" class="s69">ASCII (American Standard Code for Information Interchange), </a><a href="part430.htm#bookmark1247" class="s69">22, </a>393<a href="part431.htm#bookmark1248" class="s79">–</a><a href="part431.htm#bookmark1248" class="s69">396</a></p><p class="s72" style="padding-left: 14pt;text-indent: 0pt;text-align: left;">askNumber() <span class="s68">function</span></p><p style="padding-left: 38pt;text-indent: -12pt;text-align: left;"><a href="part225.htm#bookmark653" class="s75">assigning default arguments to parameters, 173</a></p><p style="padding-left: 26pt;text-indent: 0pt;text-align: left;"><a href="part239.htm#bookmark677" class="s75">Mad Lib game, </a><a href="part275.htm#bookmark783" class="s75">182 Tic-Tac-Toe game, 209</a></p><p class="s72" style="padding-left: 26pt;text-indent: -12pt;text-align: left;">askText()<a href="part239.htm#bookmark677" class="s69">function, Mad Lib game, 182</a></p><p class="s72" style="padding-left: 14pt;text-indent: 0pt;text-align: left;">askYesNo1() <span class="s68">function</span></p><p class="s74" style="padding-left: 26pt;text-indent: 0pt;text-align: left;"><a href="part207.htm#bookmark618" class="s75">Mad Lib game, </a>157<a href="part208.htm#bookmark620" class="s85">–</a><a href="part273.htm#bookmark780" class="s75">158 Tic-Tac-Toe game, </a>208<a href="part275.htm#bookmark783" class="s85">–</a><a href="part275.htm#bookmark783" class="s75">209</a></p><p class="s68" style="padding-left: 14pt;text-indent: 0pt;text-align: left;"><a href="part11.htm#bookmark78" class="s69">assembly language, </a>2 assigning values</p><p style="padding-left: 26pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part43.htm#bookmark135" class="s75">to Boolean variables, 22</a></p><p class="s74" style="padding-left: 26pt;text-indent: 0pt;text-align: left;"><a href="part42.htm#bookmark133" class="s75">to character variables, </a>21<a href="part43.htm#bookmark135" class="s85">–</a><a href="part42.htm#bookmark133" class="s75">22 to ﬂoating point variables, 21 to integer variables, 21</a></p><p class="s68" style="padding-left: 14pt;text-indent: 0pt;line-height: 10pt;text-align: left;"><a href="part42.htm#bookmark133" class="s69">assignment operator (=), </a><a href="part72.htm#bookmark238" class="s69">21, </a>44,</p><p class="s68" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">313<a href="part374.htm#bookmark1080" class="s79">–</a><a href="part402.htm#bookmark1177" class="s69">315, </a>346<a href="part403.htm#bookmark1180" class="s79">–</a><a href="part403.htm#bookmark1180" class="s69">347</a></p><p style="padding-left: 14pt;text-indent: 0pt;text-align: left;"><a href="part103.htm#bookmark294" class="s69">assignment statement, 70</a></p><p style="padding-left: 14pt;text-indent: 0pt;text-align: left;"><a href="part182.htm#bookmark523" class="s69">associative container, 138</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part432.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part434.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
