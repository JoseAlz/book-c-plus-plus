<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Defining New Names for Types</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part46.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part48.htm">Next &gt;</a></p><p style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="part3.htm#bookmark3" class="h1">Defining New Names for </a><h1 href="#bookmark3">Types</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">You can define a new name for an existing type. In fact, that<span class="s12">â€™</span>s what I do next in the line:</p><p class="s35" style="padding-top: 5pt;padding-left: 67pt;text-indent: 0pt;text-align: justify;">typedef unsigned short int ushort;</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">This code defines the identifier <span class="s35">ushort </span>as another name for the type <span class="s35">unsigned short int</span>. To define new names for existing types, use <span class="s35">typedef </span>followed by the current type, followed by the new name. <span class="s35">typedef </span>is often used to create shorter names for types with long names.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">You can use your new type name just like the original type. I initialize a <span class="s35">ushort </span>variable (which is really just an <span class="s35">unsigned short int</span>) named <span class="s35">bonus </span>and display its value.</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark55">24 Chapter 1 </a><span class="s32">n </span>Types, Variables, and Standard I/O: Lost Fortune<a name="bookmark56">&zwnj;</a><a name="bookmark140">&zwnj;</a><a name="bookmark141">&zwnj;</a><a name="bookmark142">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part46.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part48.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
