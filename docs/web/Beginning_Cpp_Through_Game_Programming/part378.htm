<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>The Lobby::AddPlayer() Member Function</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part377.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part379.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><h1 href="#bookmark12">The Lobby::AddPlayer() Member Function</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: left;">The <span class="s35">Lobby::AddPlayer() </span>member function adds a player to the end of the line in the lobby.</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">void Lobby::AddPlayer()</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">//create a new player node</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;Please enter the name of the new player: &quot;; string name;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 11pt;text-align: left;">cin &gt;&gt; name;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">Player* pNewPlayer = new Player(name);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">//if list is empty, make head of list this new player if (m_pHead == 0)</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 11pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">m_pHead = pNewPlayer;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">//otherwise find the end of the list and add the player there else</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;line-height: 118%;text-align: left;">Player* pIter = m_pHead; while (pIter-&gt;GetNext() != 0)</p><p class="s35" style="padding-left: 82pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 103pt;text-indent: 0pt;text-align: left;">pIter = pIter-&gt;GetNext();</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">}</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">pIter-&gt;SetNext(pNewPlayer);</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The first thing the function does is gets the new player<span class="s12">’</span>s name from the user and use it to instantiate a new <span class="s35">Player </span>object on the heap. Then it sets the object<span class="s12">’</span>s pointer data member to the null pointer.</p><p class="s19" style="padding-top: 2pt;padding-left: 252pt;text-indent: 0pt;text-align: left;">Introducing the Game Lobby Program 321</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Next, the function checks to see whether the lobby is empty. If the <span class="s35">Lobby </span>object<span class="s12">’</span>s data member <span class="s35">m_pHead </span>is <span class="s35">0</span>, then there<span class="s12">’</span>s no one in line. If so, the new <span class="s35">Player </span>object becomes the head of the line and <span class="s35">m_pHead </span>is set to point to a new <span class="s35">Player </span>object on the heap.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="10" alt="image" src="Image_384.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="42" height="9" alt="image" src="Image_385.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="104" height="45" alt="image" src="Image_386.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="105" height="126" alt="image" src="Image_387.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="27" height="8" alt="image" src="Image_388.png"/></span></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">If the lobby isn<span class="s12">’</span>t empty, the player is added to the end of the line. The function accomplishes this by moving through the list one node at a time, using <span class="s35">pIter</span><span class="s12">’</span>s <span class="s35">GetNext() </span>member function, until it reaches a <span class="s35">Player </span>object whose <span class="s35">GetNext() </span>returns <span class="s35">0</span>, meaning that it<span class="s12">’</span>s the last node in the list. Then, the function makes that node point to the new <span class="s35">Player </span>object on the heap, which has the effect of adding the new object to the end of the list. Figure 9.14 illustrates this process.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><span><img width="227" height="131" alt="image" src="Image_389.png"/></span> <span class="s59">	</span><span><img width="104" height="64" alt="image" src="Image_390.png"/></span><span class="s60"> </span><span><img width="27" height="8" alt="image" src="Image_391.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="514" height="1" alt="image" src="Image_392.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="43" height="9" alt="image" src="Image_393.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="103" height="64" alt="image" src="Image_394.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="148" height="102" alt="image" src="Image_395.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="226" height="131" alt="image" src="Image_396.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="27" height="8" alt="image" src="Image_397.png"/></span></p><p class="s37" style="padding-top: 3pt;padding-left: 40pt;text-indent: 0pt;text-align: left;">Figure 9.14</p><p class="s19" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">The list of players just before and just after a new player node is added.</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark1029">322 Chapter 9 </a><span class="s32">n </span>Advanced Classes and Dynamic Memory: Game Lobby<a name="bookmark1089">&zwnj;</a><a name="bookmark1090">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Tra p</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="519" height="1" alt="image" src="Image_398.png"/></span></p><p class="s35" style="padding-top: 5pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">Lobby::AddPlayer() <span class="s19">marches through the entire list of </span>Player <span class="s19">objects every time it’s called. For small lists this isn’t a problem, but with large lists this inefficient process can become unwieldy. There are more efficient ways to do what this function does. In one of the chapter exercises, your job will be to implement one of these more efficient methods.</span></p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_399.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part377.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part379.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
