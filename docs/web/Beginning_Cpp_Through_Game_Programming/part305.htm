<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Passing by Value</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part304.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part306.htm">Next &gt;</a></p><p style="padding-top: 10pt;padding-left: 41pt;text-indent: 0pt;text-align: left;"><h1 href="#bookmark10">Passing by Value</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: left;">After I declare and initialize <span class="s35">myScore </span>and <span class="s35">yourScore</span>, I send them to <span class="s35">cout</span>. As you<span class="s12">’</span>d expect, <span class="s35">150 </span>and <span class="s35">1000 </span>are displayed. Next I call <span class="s35">badSwap()</span>, which passes both</p><p class="s19" style="padding-top: 2pt;text-indent: 0pt;text-align: right;"><a name="bookmark823">Passing Pointers 237</a><a name="bookmark872">&zwnj;</a><a name="bookmark873">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">arguments by value. This means that when I call the function with the following line, copies of <span class="s35">myScore </span>and <span class="s35">yourScore </span>are sent to the parameters <span class="s35">x </span>and <span class="s35">y</span>.</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">badSwap(myScore, yourScore);</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Specifically, <span class="s35">x </span>is assigned <span class="s35">150 </span>and <span class="s35">y </span>is assigned <span class="s35">1000</span>. As a result, nothing I do with <span class="s35">x </span>and <span class="s35">y </span>in <span class="s35">badSwap() </span>will have any effect on <span class="s35">myScore </span>and <span class="s35">yourScore</span>.</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">When <span class="s35">badSwap() </span>executes, <span class="s35">x </span>and <span class="s35">y </span><span class="s11">do </span>exchange values<span class="s12">—</span><span class="s35">x </span>becomes <span class="s35">1000 </span>and <span class="s35">y </span>becomes <span class="s35">150</span>. However, when the function ends, both <span class="s35">x </span>and <span class="s35">y </span>go out of scope. Control then returns to <span class="s35">main()</span>, in which <span class="s35">myScore </span>and <span class="s35">yourScore </span>haven<span class="s12">’</span>t changed. When I then send <span class="s35">myScore </span>and <span class="s35">yourScore </span>to <span class="s35">cout</span>, <span class="s35">150 </span>and <span class="s35">1000 </span>are displayed again. Sadly, I still have the tiny score and you still have the large one.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part304.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part306.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
