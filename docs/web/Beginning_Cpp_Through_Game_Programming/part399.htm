<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Calling Base Class Constructors</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part398.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part400.htm">Next &gt;</a></p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;"><h1 href="#bookmark12">Calling Base Class Constructors</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">As you<span class="s12">’</span>ve seen, the constructor for a base class is automatically called when an object of a derived class is instantiated, but you can also explicitly call a base class constructor from a derived class constructor. The syntax for this is a lot like the syntax for a member initialization list. To call a base class constructor from a derived class constructor, after the derived constructor<span class="s12">’</span>s parameter list, type a colon followed by the name of the base class, followed by a set of parentheses containing whatever parameters the base class constructor you<span class="s12">’</span>re calling needs. I do this in the <span class="s35">Boss </span>constructor, which says to explicitly call the <span class="s35">Enemy </span>constructor and pass it <span class="s35">damage</span>.</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Boss::Boss(int damage):</p><p class="s35" style="padding-top: 2pt;padding-left: 52pt;text-indent: 0pt;text-align: center;">Enemy(damage)                        //call base class constructor with argument</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{}</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">This allows me to pass the <span class="s35">Enemy </span>constructor the value that gets assigned to</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">m_Damage<span class="p">, rather than just accepting its default value.</span></p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">When I first instantiate <span class="s35">aBoss </span>in <span class="s35">main()</span>, the <span class="s35">Enemy </span>constructor is called and passed the value <span class="s35">30</span>, which gets assigned to <span class="s35">m_Damage</span>. Then, the <span class="s35">Boss </span>constructor runs (which doesn<span class="s12">’</span>t do much of anything) and the object is completed.</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark1116">344 Chapter 10 </a><span class="s32">n </span>Inheritance and Polymorphism: Blackjack<a name="bookmark1171">&zwnj;</a><a name="bookmark1172">&zwnj;</a><a name="bookmark1173">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Hi n t</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="519" height="1" alt="image" src="Image_424.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-bottom: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">Being able to call a base class constructor is useful when you want to pass specific values to it.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="492" height="3" alt="image" src="Image_425.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part398.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part400.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
