<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Understanding Type Modifiers</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part39.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part41.htm">Next &gt;</a></p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;"><h1 href="#bookmark3">Understanding Type Modifiers</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">You can use modifiers to alter a type. <span class="s35">short </span>is a modifier that can reduce the total number of values a variable can hold. <span class="s35">long </span>is a modifier that can increase the total number of values a variable can hold. <span class="s35">short </span>may decrease the storage space required for a variable while <span class="s35">long </span>may increase it. <span class="s35">short </span>and <span class="s35">long </span>can modify <span class="s35">int</span>. <span class="s35">long </span>can also modify <span class="s35">double</span>.</p><p class="s35" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">signed <span class="p">and </span>unsigned <span class="p">are modifiers that work only with integer types. </span>signed <span class="p">means that a variable can store both positive and negative values, while </span>unsigned <span class="p">means that a variable can store only positive values. Neither </span>signed <span class="p">nor </span>unsigned <span class="p">change the total number of values a variable can hold; they only change the range of values. </span>signed <span class="p">is the default for integer types.</span></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Okay, confused with all of your type options? Well, don<span class="s12">’</span>t be. Table 1.1 summarizes commonly used types with some modifiers thrown in. The table also provides a range of values for each.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Tra p</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="525" height="1" alt="image" src="Image_047.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">The range of values listed is based on my compiler. Yours might be different. Check your compiler’s documentation.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_048.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Hi n t</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="522" height="1" alt="image" src="Image_049.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">For brevity’s sake, <span class="s35">short int </span>can be written as just <span class="s35">short </span>and <span class="s35">long int </span>can be written as just</p><p class="s35" style="padding-bottom: 4pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">long<span class="s19">.</span></p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="490" height="3" alt="image" src="Image_050.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="408" height="281" alt="image" src="Image_051.png"/></span></p><p class="s41" style="text-indent: 0pt;line-height: 9pt;text-align: left;">256 character values</p><p class="s35" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">true <span class="s41">or </span>false</p><p style="text-indent: 0pt;text-align: left;"/><p class="s41" style="text-indent: 0pt;line-height: 9pt;text-align: left;">38 (seven significant digits)</p><p class="s41" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">308 (15 significant digits)</p><p class="s41" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">308 (15 significant digits)</p><p style="text-indent: 0pt;text-align: left;"/><p class="s41" style="text-indent: 0pt;line-height: 10pt;text-align: left;">3.4E <span class="s42">þ</span>/</p><p class="s41" style="padding-top: 1pt;text-indent: 0pt;text-align: left;">1.7E <span class="s42">þ</span>/</p><p class="s41" style="padding-top: 1pt;text-indent: 0pt;text-align: left;">1.7E <span class="s42">þ</span>/</p><p style="text-indent: 0pt;text-align: left;"/><p class="s41" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">32,768 to 32,767</p><p class="s41" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">0 to 65,535</p><p class="s41" style="padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">2,147,483,648 to 2,147,483,647</p><p class="s41" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">0 to 4,294,967,295</p><p class="s41" style="padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;">2,147,483,648 to 2,147,483,647</p><p class="s41" style="padding-top: 2pt;text-indent: 0pt;text-align: left;">0 to 4,294,967,295</p><p style="text-indent: 0pt;text-align: left;"/><p class="s35" style="text-indent: 0pt;line-height: 10pt;text-align: left;">short int</p><p class="s35" style="padding-top: 2pt;text-indent: 0pt;line-height: 119%;text-align: left;">unsigned short int int</p><p class="s35" style="text-indent: 0pt;line-height: 119%;text-align: left;">unsigned int long int</p><p class="s35" style="text-indent: 0pt;line-height: 119%;text-align: left;">unsigned long int float</p><p class="s35" style="text-indent: 0pt;line-height: 11pt;text-align: left;">double</p><p class="s35" style="padding-top: 1pt;text-indent: 0pt;line-height: 118%;text-align: left;">long double char</p><p class="s35" style="text-indent: 0pt;text-align: left;">bool</p><p style="text-indent: 0pt;text-align: left;"/><p class="s43" style="text-indent: 0pt;line-height: 12pt;text-align: left;">Table 1.1 <span class="s44">Commonly Used Types</span></p><p class="s37" style="padding-top: 7pt;text-indent: 0pt;text-align: left;">Type Values</p><p style="text-indent: 0pt;text-align: left;"/><p class="s19" style="padding-top: 2pt;padding-left: 267pt;text-indent: 0pt;text-align: left;"><a name="bookmark48">Declaring and Initializing Variables 19</a><a name="bookmark126">&zwnj;</a><a name="bookmark127">&zwnj;</a><a name="bookmark128">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part39.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part41.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
