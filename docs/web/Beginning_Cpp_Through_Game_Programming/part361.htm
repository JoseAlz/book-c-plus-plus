<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Introducing the Friend Critter Program</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part360.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part362.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part3.htm#bookmark11" class="h1">Introducing the Friend Critter </a><h1 href="#bookmark11">Program</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The Friend Critter program creates a critter object. It then uses a friend function, which is able to directly access the private data member that stores the critter<span class="s12">’</span>s name to display the critter<span class="s12">’</span>s name. Finally, the program displays the critter object by sending the object to the standard output. This is accomplished</p><p class="s19" style="padding-top: 2pt;padding-left: 195pt;text-indent: 0pt;text-align: left;">Using Friend Functions and Operator Overloading 293</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">through a friend function and operator overloading. Figure 9.2 displays the results of the program.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 40pt;text-indent: 0pt;text-align: left;"><span><img width="482" height="254" alt="image" src="Image_335.gif"/></span></p><p class="s37" style="padding-top: 5pt;padding-left: 40pt;text-indent: 0pt;text-align: justify;">Figure 9.2</p><p class="s19" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">The name of the critter is displayed through a friend function, and the <span class="s35">critter </span>object is displayed by sending it to the standard output.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;"><a href="http://www.courseptr.com/downloads" class="s15" target="_blank">You can download the code for this program from the Course Technology website (</a>www.courseptr.com/downloads). The program is in the Chapter 9 folder; the filename is <span class="s35">friend_critter.cpp</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">//Friend Critter</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">//Demonstrates friend functions and operator overloading</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 118%;text-align: left;">#include &lt;iostream&gt; #include &lt;string&gt;</p><p class="s35" style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 26pt;text-align: left;">using namespace std; class Critter</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 10pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">//make following global functions friends of the Critter class friend void Peek(const Critter&amp; aCritter);</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">friend ostream&amp; operator&lt;&lt;(ostream&amp; os, const Critter&amp; aCritter);</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark1049">294 Chapter 9 </a><span class="s32">n </span>Advanced Classes and Dynamic Memory: Game Lobby</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">public:</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">Critter(const string&amp; name = &quot;&quot;);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">private:</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">string m_Name;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: -20pt;line-height: 119%;text-align: left;">Critter::Critter(const string&amp; name): m_Name(name)</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">{}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">void Peek(const Critter&amp; aCritter);</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">ostream&amp; operator&lt;&lt;(ostream&amp; os, const Critter&amp; aCritter);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">int main()</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">Critter crit(&quot;Poochie&quot;);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;Calling Peek() to access crit’s private data member, m_Name: \n&quot;; Peek(crit);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 118%;text-align: left;">cout &lt;&lt; &quot;\nSending crit object to cout with the &lt;&lt; operator:\n&quot;; cout &lt;&lt; crit;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">return 0;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 119%;text-align: left;">//global friend function which can access all of a Critter object’s members void Peek(const Critter&amp; aCritter)</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; aCritter.m_Name &lt;&lt; endl;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">//global friend function which can access all of Critter object’s members</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 118%;text-align: left;">//overloads the &lt;&lt; operator so you can send a Critter object to cout ostream&amp; operator&lt;&lt;(ostream&amp; os, const Critter&amp; aCritter)</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">os &lt;&lt; &quot;Critter Object - &quot;;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">os &lt;&lt; &quot;m_Name: &quot; &lt;&lt; aCritter.m_Name; return os;</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">}</p><p class="s19" style="padding-top: 2pt;padding-left: 195pt;text-indent: 0pt;text-align: left;"><a name="bookmark1012">Using Friend Functions and Operator Overloading 295</a><a name="bookmark1050">&zwnj;</a><a name="bookmark1051">&zwnj;</a><a name="bookmark1052">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part360.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part362.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
