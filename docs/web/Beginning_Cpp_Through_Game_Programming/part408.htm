<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using Abstract Classes</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part407.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part409.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="#bookmark12" class="s30">Using Abstract Classes</a></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">At times you might want to define a class to act as a base for other classes, but it doesn<span class="s12">’</span>t make sense to instantiate objects from this class because it<span class="s12">’</span>s so generic. For example, suppose you have a game with a bunch of types of creatures running around in it. Although you have a wide variety of creatures, they all have two things in common: They have a health value and they can offer a greeting. So, you could define a class, <span class="s35">Creature</span>, as a base from which to derive other classes, such as <span class="s35">Pixie</span>, <span class="s35">Dragon</span>, <span class="s35">Orc</span>, and so on. Although <span class="s35">Creature </span>is helpful, it doesn<span class="s12">’</span>t really make sense to instantiate a <span class="s35">Creature </span>object. It would be great if there were a way to indicate that <span class="s35">Creature </span>is a base class only, and not meant for instantiating objects. Well, C++ lets you define a kind of class just like this, called an <span class="s11">abstract class</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part409.htm">Introducing the Abstract Creature Program</a><a class="toc0" href="part410.htm">Declaring Pure Virtual Functions</a><a class="toc0" href="part411.htm">Deriving a Class from an Abstract Class</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part407.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part409.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
