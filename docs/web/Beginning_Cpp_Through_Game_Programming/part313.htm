<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Altering an Object through a Returned Pointer</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part312.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part314.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><h1 href="#bookmark10">Altering an Object through a Returned Pointer</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">You can also alter the object to which a returned pointer points. This means that I can change the hero<span class="s12">’</span>s inventory through <span class="s35">pStr</span>.</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">*pStr = &quot;Healing Potion&quot;;</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Because <span class="s35">pStr </span>points to the element in position <span class="s35">1 </span>of <span class="s35">inventory</span>, this code changes <span class="s35">inventory[1] </span>so it<span class="s12">’</span>s equal to <span class="s35">&quot;Healing Potion&quot;</span>. To prove this, I display the element with the following line, which does indeed show <span class="s35">Healing Potion</span>.</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; inventory[1] &lt;&lt; endl;</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">For an abstract representation, check out Figure 7.7, which shows the status of the variables after the assignment.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Hin t</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="525" height="1" alt="image" src="Image_300.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">If you want to protect an object pointed to by a returned pointer, make sure to restrict the pointer. Return either a pointer to a constant or a constant pointer to a constant.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="490" height="3" alt="image" src="Image_301.png"/></span></p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark831">244 Chapter 7 </a><span class="s32">n </span>Pointers: Tic-Tac-Toe 2.0<a name="bookmark887">&zwnj;</a><a name="bookmark888">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><span><img width="321" height="156" alt="image" src="Image_302.gif"/></span></p><p class="s37" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Figure 7.7</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a name="bookmark832">inventory[1] </a><span class="s19">is changed through the returned pointer stored in </span>pStr<span class="s19">.</span><a name="bookmark889">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part312.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part314.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
