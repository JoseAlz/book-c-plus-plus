<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using Global Constants</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part222.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part224.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark8" class="s30">Using Global Constants</a></p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Unlike global variables, which can make your programs confusing, <span class="s11">global constants</span><span class="s12">—</span>constants that can be accessed from anywhere in your program<span class="s12">— </span>can help make programs clearer. You declare a global constant much like you declare a global variable<span class="s12">—</span>by declaring it outside of any function. And because</p><p style="padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">you<span class="s12">’</span>re declaring a constant, you need to use the <span class="s35">const </span>keyword. For example, the following line defines a global constant (assuming the declaration is outside of any function) named <span class="s35">MAX_ENEMIES </span>with a value of 10 that can be accessed anywhere in the program.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">const int MAX_ENEMIES = 10;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Tra p</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="517" height="1" alt="image" src="Image_213.png"/></span></p><p class="s19" style="padding-top: 6pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">Just like with global variables, you can hide a global constant by declaring a local constant with the same name. However, you should avoid this because it can lead to confusion.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_214.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">How exactly can global constants make game programming code clearer? Well, suppose you<span class="s12">’</span>re writing an action game in which you want to limit the total number of enemies that can blast the poor player at once. Instead of using a numeric literal everywhere, such as 10, you could define a global constant <span class="s35">MAX_ENEMIES </span>that<span class="s12">’</span>s equal to 10. Then whenever you see that global constant name, you know exactly what it stands for.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">One caveat: You should only use global constants if you need a constant value in more than one part of your program. If you only need a constant value in a specific scope (such as in a single function), use a local constant instead.</p><p class="s19" style="padding-top: 2pt;padding-left: 312pt;text-indent: 0pt;text-align: left;"><a name="bookmark580">Using Default Arguments 171</a><a name="bookmark581">&zwnj;</a><a name="bookmark648">&zwnj;</a><a name="bookmark649">&zwnj;</a><a name="bookmark650">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part222.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part224.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
