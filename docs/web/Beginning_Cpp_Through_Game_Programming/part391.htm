<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Instantiating Objects from a Derived Class</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part390.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part392.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="part3.htm#bookmark12" class="h1">Instantiating Objects from a Derived </a><h1 href="#bookmark12">Class</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">In <span class="s35">main()</span>, I instantiate an <span class="s35">Enemy </span>object and then call its <span class="s35">Attack() </span>member function. This works just as you<span class="s12">’</span>d expect. The interesting part of the program begins next, when I instantiate a <span class="s35">Boss </span>object.</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">Boss boss1;</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">After this line of code, I have a <span class="s35">Boss </span>object with an <span class="s35">m_Damage </span>data member equal to <span class="s35">10 </span>and an <span class="s35">m_DamageMultiplier </span>data member equal to <span class="s35">3</span>. How did this happen? Although constructors and destructors are not inherited from a base class, they are called when an instance is created or destroyed. In fact, a base class constructor is called before the derived class constructor to create its part of the final object.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">In this case, when a <span class="s35">Boss </span>object is instantiated, the default <span class="s35">Enemy </span>constructor is automatically called and the object gets an <span class="s35">m_Damage </span>data member with a value of <span class="s35">10 </span>(just like any <span class="s35">Enemy </span>object would). Then, the <span class="s35">Boss </span>constructor is called and finishes off the object by giving it an <span class="s35">m_DamageMultiplier </span>data member with a value of <span class="s35">3</span>. The reverse happens when a <span class="s35">Boss </span>object is destroyed at the end of the program. First, the <span class="s35">Boss </span>class destructor is called for the object, and then the</p><p class="s19" style="padding-top: 2pt;padding-left: 258pt;text-indent: 0pt;text-align: left;"><a name="bookmark1108">Controlling Access under Inheritance 337</a><a name="bookmark1154">&zwnj;</a><a name="bookmark1155">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;"><span class="s35">Enemy </span>class destructor is called. Because I didn<span class="s12">’</span>t define destructors in this program, nothing special happens before the <span class="s35">Boss </span>object ceases to exist.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Hin t</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="519" height="1" alt="image" src="Image_417.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-bottom: 3pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">The fact that base class destructors are called for objects of derived classes ensures that each class gets its chance to clean up any part of the object that needs to be taken care of, such as memory on the heap.</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_418.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part390.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part392.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
