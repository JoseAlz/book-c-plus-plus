<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using Enumerations</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part57.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part59.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><h1 href="#bookmark3">Using Enumerations</h1></p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">An <span class="s11">enumeration </span>is a set of <span class="s35">unsigned int </span>constants, called <span class="s11">enumerators</span>. Usually the enumerators are related and have a particular order. Here<span class="s12">’</span>s an example of an enumeration:</p><p class="s35" style="padding-top: 5pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">enum difficulty {NOVICE, EASY, NORMAL, HARD, UNBEATABLE};</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">This defines an enumeration named <span class="s35">difficulty</span>. By default, the value of enumerators begins at zero and increases by one. So <span class="s35">NOVICE </span>is <span class="s35">0</span>, <span class="s35">EASY </span>is <span class="s35">1</span>, <span class="s35">NORMAL </span>is <span class="s35">2</span>, <span class="s35">HARD </span>is <span class="s35">3</span>, and <span class="s35">UNBEATABLE </span>is <span class="s35">4</span>. To define an enumeration of your own,  use  the keyword <span class="s35">enum </span>followed by an  identifier, followed  by a  list  of enumerators between curly braces.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Next I create a variable of this new enumeration type.</p><p class="s35" style="padding-top: 6pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">difficulty myDifficulty = EASY;</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">The variable <span class="s35">myDifficulty </span>is set to <span class="s35">EASY </span>(which is equal to <span class="s35">1</span>). <span class="s35">myDifficulty </span>is of type <span class="s35">difficulty</span>, so it can only hold one of the values defined in the enumeration. That means <span class="s35">myDifficulty </span>can only be assigned <span class="s35">NOVICE</span>, <span class="s35">EASY</span>, <span class="s35">NORMAL</span>, <span class="s35">HARD</span>, <span class="s35">UNBEATABLE</span>, <span class="s35">0</span>, <span class="s35">1</span>, <span class="s35">2</span>, <span class="s35">3</span>, or <span class="s35">4</span>.</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark158">32 Chapter 1 </a><span class="s32">n </span>Types, Variables, and Standard I/O: Lost Fortune</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">Next I define another enumeration.</p><p class="s35" style="padding-top: 6pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">enum shipCost {FIGHTER_COST = 25, BOMBER_COST, CRUISER_COST = 50};</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;"><a name="bookmark66">This line of code defines the enumeration </a><span class="s35">shipCost</span>, which represents the cost in Resource Points for three kinds of ships in a strategy game. In it, I assign specific integer values to some of the enumerators. The numbers represent the Resource Point value of each ship. You can assign values to the enumerators if you want. Any enumerators that are not assigned values get the value of the previous enumerator plus one. Because I didn<span class="s12">’</span>t assign a value to <span class="s35">BOMBER_COST</span>, it<span class="s12">’</span>s initialized to <span class="s35">26</span>.<a name="bookmark67">&zwnj;</a><a name="bookmark159">&zwnj;</a><a name="bookmark160">&zwnj;</a></p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Next I define a variable of this new enumeration type.</p><p class="s35" style="padding-top: 6pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">shipCost myShipCost = BOMBER_COST;</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Then I demonstrate how you can use enumerators in arithmetic calculations.</p><p class="s35" style="padding-top: 6pt;padding-left: 67pt;text-indent: 0pt;text-align: left;">(CRUISER_COST - myShipCost)</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">This piece of code calculates the cost of upgrading a Bomber to a Cruiser. The calculation is the same as <span class="s35">50 - 26</span>, which evaluates to <span class="s35">24</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part57.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part59.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
