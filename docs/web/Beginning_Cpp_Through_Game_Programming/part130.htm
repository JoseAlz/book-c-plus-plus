<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using the find() Member Function</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part129.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part131.htm">Next &gt;</a></p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="part3.htm#bookmark5" class="h1">Using the find() Member </a><h1 href="#bookmark5">Function</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Next I use the member function <span class="s35">find() </span>to check whether either of two string literals are contained in <span class="s35">phrase</span>. First, I check for the string literal <span class="s35">&quot;Over&quot;</span>:</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;\nThe sequence ’Over’ begins at location &quot;; cout &lt;&lt; phrase.find(&quot;Over&quot;) &lt;&lt; endl;</p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The <span class="s35">find() </span>member function searches the calling <span class="s35">string </span>object for the string supplied as an argument. The member function returns the position number of the first occurrence where the <span class="s35">string </span>object for which you are searching begins in the calling <span class="s35">string </span>object. This means that <span class="s35">phrase.find(&quot;Over&quot;) </span>returns the position number where the first occurrence of <span class="s35">&quot;Over&quot; </span>begins in <span class="s35">phrase</span>. Since <span class="s35">phrase </span>is <span class="s35">&quot;Lame Over!!!&quot;</span>, <span class="s35">find() </span>returns 5. (Remember, position numbers begin at 0, so 5 means the sixth character.)</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">But what if the string for which you are searching doesn<span class="s12">’</span>t exist in the calling string? I tackle that situation next:</p><p class="s35" style="padding-top: 5pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">if (phrase.find(&quot;eggplant&quot;) == string::npos)</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; &quot;’eggplant’ is not in the phrase.\n\n&quot;;</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Because <span class="s35">&quot;eggplant&quot;  </span>does not exist in <span class="s35">phrase</span>, <span class="s35">find()  </span>returns a special constant defined  in  the  file  <span class="s35">string</span>,  which  I  access  with  <span class="s35">string::npos</span>.  As  a  result,  the screen displays the message, <span class="s12">“</span><span class="s35">’eggplant’ is not in the phrase.</span><span class="s12">”</span></p><p class="s19" style="padding-top: 2pt;padding-left: 337pt;text-indent: 0pt;text-align: left;"><a name="bookmark331">Using String Objects 95</a><a name="bookmark382">&zwnj;</a><a name="bookmark383">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The constant I access through <span class="s35">string::npos </span>represents the largest possible size of a <span class="s35">string </span>object, so it is greater than any possible valid position number in a <span class="s35">string </span>object. Informally, it means <span class="s12">“</span>a position number that can<span class="s12">’</span>t exist.<span class="s12">” </span>It<span class="s12">’</span>s the perfect return value to indicate that one string couldn<span class="s12">’</span>t be found in another.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Hin t</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="525" height="1" alt="image" src="Image_135.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">When using <span class="s35">find()</span>, you can supply an optional argument that specifies a character number for the program to start looking for the substring. The following line will start looking for the string literal <span class="s35">&quot;eggplant&quot; </span>beginning at position 5 in the <span class="s35">string </span>object <span class="s35">phrase</span>.</p><p class="s35" style="padding-top: 5pt;padding-bottom: 2pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">location = phrase.find(&quot;eggplant&quot;, 5);</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_136.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part129.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part131.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
