<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Questions and Answers</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part383.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part385.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><a href="#bookmark12" class="s30">Questions and Answers</a></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Q: Why should you use aggregation?</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 152%;text-align: justify;">A: To create more complex objects from other objects. Q: What is composition?</p><p style="padding-left: 56pt;text-indent: -15pt;line-height: 106%;text-align: justify;">A: A form of aggregation in which the composite object is responsible for the creation and destruction of its object parts. Composition is often called a <span class="s12">“</span>uses a<span class="s12">” </span>relationship.</p><p class="s19" style="padding-top: 2pt;text-indent: 0pt;text-align: right;">Questions and Answers 327</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Q: When should I use a friend function?</p><p style="padding-top: 7pt;padding-left: 56pt;text-indent: -15pt;line-height: 107%;text-align: left;">A: When you need a function to have access to the non-public members of a class.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Q: What is a friend member function?</p><p style="padding-top: 7pt;padding-left: 55pt;text-indent: -14pt;line-height: 106%;text-align: left;">A: A member function of one class that can access all of the members of another class.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Q: What is a friend class?</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 152%;text-align: left;">A: A class that can access all of the members of another class. Q: Can<span class="s12">’</span>t operator overloading become confusing?</p><p style="padding-left: 57pt;text-indent: -15pt;line-height: 106%;text-align: left;">A: Yes. Giving too many meanings or unintuitive meanings to operators can lead to code that<span class="s12">’</span>s difficult to understand.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Q: What happens when I instantiate a new object on the heap?</p><p style="padding-top: 7pt;padding-left: 56pt;text-indent: -15pt;line-height: 106%;text-align: left;">A: All of the data members will occupy memory on the heap and not on the stack.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Q: Can I access an object through a constant pointer?</p><p style="padding-top: 7pt;padding-left: 55pt;text-indent: -14pt;line-height: 106%;text-align: left;">A: Sure. But you can only access constant member functions through a constant pointer.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Q: What<span class="s12">’</span>s wrong with shallow copies?</p><p style="padding-top: 7pt;padding-left: 56pt;text-indent: -15pt;line-height: 106%;text-align: left;">A: Because shallow copies share references to the same chunks of memory, a change to one object will be reflected in another object.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">Q: What is a linked list?</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 152%;text-align: left;">A: A dynamic data structure that consists of a sequence of linked nodes. Q: How is a linked list different from a vector?</p><p style="padding-left: 55pt;text-indent: -14pt;line-height: 106%;text-align: justify;">A: Linked lists permit insertion and removal of nodes at any point in the list but do not allow random access, like vectors. However, the insertion and deletion of nodes in the middle of the list can be more efficient than the insertion and deletion of elements in the middle of vectors.</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark1035">328 Chapter 9 </a><span class="s32">n </span>Advanced Classes and Dynamic Memory: Game Lobby<a name="bookmark1101">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 152%;text-align: left;">Q: Is there a container class from the STL that serves as a linked list? A: Yes, the <span class="s35">list </span>class.</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 152%;text-align: left;">Q: Is the data structure used in the Game Lobby program a linked list? A: It shares similarities to a linked list, but it is really a queue.</p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Q: What<span class="s12">’</span>s a queue?</p><p style="padding-top: 7pt;padding-left: 55pt;text-indent: -14pt;line-height: 106%;text-align: left;">A: A data structure in which elements are removed in the same order in which they were entered. This process is often called first in, first out (FIFO).</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 152%;text-align: left;"><a name="bookmark1036">Q: Is there a kind of container from the STL that serves as a queue? A: Yes, the </a><span class="s35">queue </span>container adaptor.<a name="bookmark1102">&zwnj;</a></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part383.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part385.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
