<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Setting Up the Program</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part271.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part273.htm">Next &gt;</a></p><p style="padding-top: 13pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;"><h1 href="#bookmark9">Setting Up the Program</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;"><a href="http://www.courseptr.com/downloads" class="s15" target="_blank">You can download the code for this program from the Course Technology website (www.courseptr.com/downloads)</a>.  The  program  is  in  the  Chapter  6  folder;  the filename is <span class="s35">tic-tac-toe.cpp</span>. I<span class="s12">’</span>ll go over the code here, section by section.</p><p style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The first thing I do in the program is include the files I need, define some global constants, and write my function prototypes.</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">// Tic-Tac-Toe</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">// Plays the game of tic-tac-toe against a human opponent</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 119%;text-align: left;">#include &lt;iostream&gt; #include &lt;string&gt; #include &lt;vector&gt; #include &lt;algorithm&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">using namespace std;</p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark776">206 Chapter 6 </a><span class="s32">n </span>References: Tic-Tac-Toe</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="522" height="477" alt="image" src="Image_262.png"/></span></p><p class="s43" style="padding-top: 3pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">Table 6.1 <span class="s44">Tic-Tac-Toe Functions</span></p><p class="s37" style="padding-top: 7pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">Function Description</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s57" style="padding-left: 53pt;text-indent: 0pt;text-align: left;">void instructions() <span class="s41">Displays the game instructions.</span></p><p class="s57" style="padding-top: 2pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">char askYesNo(string <i>question</i>) <span class="s41">Asks a yes or no question. Receives a question. Returns</span></p><p class="s41" style="padding-left: 231pt;text-indent: 0pt;text-align: left;">either a <span class="s57">’y’ </span>or an <span class="s57">’n’</span>.</p><p class="s57" style="padding-top: 3pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">int askNumber(string <i>question</i>, int</p><p class="s58" style="padding-top: 1pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">high<span class="s57">, int </span>low <span class="s57">= 0)</span></p><p class="s41" style="padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Asks for a number within a range. Receives a question, a low number, and a high number. Returns a number in the range from <span class="s58">low </span>to <span class="s58">high</span>.</p><p class="s57" style="padding-top: 1pt;padding-left: 231pt;text-indent: -178pt;line-height: 106%;text-align: left;">char humanPiece() <span class="s41">Determines the human’s piece. Returns either an </span>’X’ <span class="s41">or an </span>’O’<span class="s41">.</span></p><p class="s57" style="padding-top: 2pt;text-indent: 0pt;text-align: right;">char opponent(char <i>piece</i>) <span class="s41">Calculates the opposing piece given a piece. Receives</span></p><p class="s41" style="text-indent: 0pt;text-align: right;">either an <span class="s57">’X’ </span>or an <span class="s57">’O’</span>. Returns either an <span class="s57">’X’ </span>or an</p><p class="s57" style="padding-left: 57pt;text-indent: 0pt;text-align: center;">’O’<span class="s41">.</span></p><p class="s57" style="padding-top: 3pt;padding-left: 53pt;text-indent: 0pt;line-height: 112%;text-align: left;">void displayBoard(const vector&lt;char&gt;&amp; <i>board</i>)</p><p class="s57" style="padding-top: 2pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">char winner(const vector&lt;char&gt;&amp;</p><p class="s58" style="padding-top: 1pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">board<span class="s57">)</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s57" style="padding-left: 53pt;text-indent: 0pt;text-align: left;">bool isLegal(const vector&lt;char&gt;&amp;</p><p class="s58" style="padding-top: 1pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">board<span class="s57">, int </span>move<span class="s57">)</span></p><p class="s57" style="padding-top: 3pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">int humanMove(const vector&lt;char&gt;&amp;</p><p class="s58" style="padding-top: 1pt;padding-left: 53pt;text-indent: 0pt;text-align: left;">board<span class="s57">, char </span>human<span class="s57">)</span></p><p class="s57" style="padding-top: 3pt;padding-left: 53pt;text-indent: 0pt;line-height: 112%;text-align: left;">int computerMove(vector&lt;char&gt; <i>board</i>, char <i>computer</i>)</p><p class="s57" style="padding-top: 2pt;padding-left: 53pt;text-indent: 0pt;line-height: 112%;text-align: left;">void announceWinner(char <i>winner</i>, char <i>computer</i>, char <i>human</i>)</p><p class="s41" style="padding-top: 2pt;padding-left: 12pt;text-indent: 0pt;text-align: left;">Displays the board on the screen. Receives a board.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s41" style="padding-left: 12pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Determines the game winner. Receives a board. Returns an <span class="s57">’X’</span>, <span class="s57">’O’</span>, <span class="s57">’T’ </span>(to indicate a tie), or <span class="s57">’N’ </span>(to indicate that no one has won yet).</p><p class="s41" style="padding-top: 2pt;padding-left: 12pt;text-indent: 0pt;line-height: 106%;text-align: justify;">Determines whether a move is legal. Receives a board and a move. Returns either <span class="s57">true </span>or <span class="s57">false</span>.</p><p class="s41" style="padding-top: 1pt;padding-left: 12pt;text-indent: 0pt;line-height: 106%;text-align: left;">Gets the human’s move. Receives a board and the human’s piece. Returns the human’s move.</p><p class="s41" style="padding-top: 2pt;padding-left: 12pt;text-indent: 0pt;line-height: 115%;text-align: left;">Calculates the computer’s move. Receives a board and the computer’s piece. Returns the computer’s move. Congratulates the winner or declares a tie. Receives the</p><p class="s41" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">winning side, the computer’s piece, and the human’s</p><p class="s41" style="padding-left: 12pt;text-indent: 0pt;text-align: left;">piece.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 119%;text-align: left;">// global constants const char X = ’X’; const char O = ’O’; const char EMPTY = ’ ’; const char TIE = ’T’; const char NO_ONE = ’N’;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 119%;text-align: left;">// function prototypes void instructions();</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">char askYesNo(string question);</p><p class="s19" style="padding-top: 2pt;padding-left: 272pt;text-indent: 0pt;text-align: left;"><a name="bookmark716">Introducing the Tic-Tac-Toe Game 207</a><a name="bookmark777">&zwnj;</a><a name="bookmark778">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 119%;text-align: left;">int askNumber(string question, int high, int low = 0); char humanPiece();</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 11pt;text-align: left;">char opponent(char piece);</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 118%;text-align: left;">void displayBoard(const vector&lt;char&gt;&amp; board); char winner(const vector&lt;char&gt;&amp; board);</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;line-height: 118%;text-align: left;">bool isLegal(const vector&lt;char&gt;&amp; board, int move); int humanMove(const vector&lt;char&gt;&amp; board, char human); int computerMove(vector&lt;char&gt; board, char computer);</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">void announceWinner(char winner, char computer, char human);</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">In the global constants section, <span class="s35">X </span>is shorthand for the <span class="s35">char ’X’</span>, one of the two pieces in the game. <span class="s35">O </span>represents the <span class="s35">char ’O’</span>, the other piece in the game. <span class="s35">EMPTY</span>, also a <span class="s35">char</span>, represents an empty square on the board. It<span class="s12">’</span>s a space because when it<span class="s12">’</span>s displayed, it will look like an empty square. <span class="s35">TIE </span>is a <span class="s35">char </span>that represents a tie game. And <span class="s35">NO_ONE </span>is a <span class="s35">char </span>used to represent neither side of the game, which I use to indicate that no one has won yet.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part271.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part273.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
