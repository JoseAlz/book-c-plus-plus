<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>The main() Function</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part421.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part423.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;"><h1 href="#bookmark13">The main() Function</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">After declaring the overloaded <span class="s35">operator () </span>functions, I write the program<span class="s12">’</span>s</p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">main() <span class="p">function.</span></p><p class="s35" style="padding-top: 6pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">//function prototypes</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">ostream&amp; operator&lt;&lt;(ostream&amp; os, const Card&amp; aCard);</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">ostream&amp; operator&lt;&lt;(ostream&amp; os, const GenericPlayer&amp; aGenericPlayer);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">int main()</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">{</p><p class="s19" style="padding-top: 2pt;padding-left: 281pt;text-indent: 0pt;text-align: left;"><a name="bookmark1219">Introducing the Blackjack Game 377</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 26pt;text-align: left;">cout &lt;&lt; &quot;\t\tWelcome to Blackjack!\n\n&quot;; int numPlayers = 0;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 10pt;text-align: left;">while (numPlayers &lt; 1 || numPlayers &gt; 7)</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;line-height: 118%;text-align: left;">cout &lt;&lt; &quot;How many players? (1 - 7): &quot;; cin &gt;&gt; numPlayers;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;"><a name="bookmark1139">vector&lt;string&gt; names; string name;</a><a name="bookmark1220">&zwnj;</a></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 11pt;text-align: left;">for (int i = 0; i &lt; numPlayers; ++i)</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;line-height: 119%;text-align: left;">cout &lt;&lt; &quot;Enter player name: &quot;; cin &gt;&gt; name; names.push_back(name);</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 11pt;text-align: left;">}</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">cout &lt;&lt; endl;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 119%;text-align: left;">//the game loop Game aGame(names); char again = ’y’;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;line-height: 11pt;text-align: left;">while (again != ’n’ &amp;&amp; again != ’N’)</p><p class="s35" style="padding-top: 2pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">{</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;text-align: left;">aGame.Play();</p><p class="s35" style="padding-top: 2pt;padding-left: 82pt;text-indent: 0pt;line-height: 118%;text-align: left;">cout &lt;&lt; &quot;\nDo you want to play again? (Y/N): &quot;; cin &gt;&gt; again;</p><p class="s35" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s35" style="padding-top: 3pt;padding-left: 62pt;text-indent: 0pt;text-align: left;">return 0;</p><p class="s35" style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">}</p><p style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">The <span class="s35">main() </span>function gets the names of all the players and puts them into a vector of <span class="s35">string </span>objects, and then instantiates a <span class="s35">Game </span>object, passing a reference to the vector. The <span class="s35">main() </span>function keeps calling the <span class="s35">Game </span>object<span class="s12">’</span>s <span class="s35">Play() </span>member function until the players indicate that they don<span class="s12">’</span>t want to play anymore.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part421.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part423.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
