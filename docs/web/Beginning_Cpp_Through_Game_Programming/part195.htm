<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Summary</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part194.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part196.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="#bookmark7" class="s30">Summary</a></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;text-align: left;">In this chapter, you learned the following concepts:</p><p class="s29" style="padding-top: 10pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">n <span class="p">The Standard Template Library (STL) is a powerful collection of programming code that provides containers, algorithms, and iterators.</span></p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">n <span class="p">Containers are objects that let you store and access collections of values of the same type.</span></p><p class="s19" style="padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;"><a name="bookmark547">146 Chapter 4 </a><span class="s32">n </span>The Standard Template Library: Hangman<a name="bookmark548">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s29" style="padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">n <span class="p">Algorithms defined in the STL can be used with its containers and provide common functions for working with groups of objects.</span></p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">n <span class="p">Iterators are objects that identify elements in containers and can be manipulated to move among elements.</span></p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">n <span class="p">Iterators are the key to using containers to their fullest. Many of the container member functions require iterators, and the STL algorithms require them too.</span></p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;"><a name="bookmark467"><span class="s29">n </span></a>To get the value referenced by an iterator, you must dereference the iterator using the dereference operator (<span class="s35">*</span>).<a name="bookmark549">&zwnj;</a></p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">n <span class="p">A vector is one kind of sequential container provided by the STL. It acts like a dynamic array.</span></p><p style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;"><span class="s29">n </span>It<span class="s12">’</span>s very efficient to iterate through a vector. It<span class="s12">’</span>s also very efficient to insert or remove an element from the end of a vector.</p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 107%;text-align: left;">n <span class="p">It can be inefficient to insert or delete elements from the middle of a vector, especially if the vector is large.</span></p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 107%;text-align: left;">n <span class="p">Pseudocode, which falls somewhere between English and a programming language, is used to plan programs.</span></p><p class="s29" style="padding-top: 5pt;padding-left: 65pt;text-indent: -11pt;line-height: 106%;text-align: left;">n <span class="p">Stepwise refinement is a process used to rewrite pseudocode to make it ready for implementation.</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part194.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part196.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
