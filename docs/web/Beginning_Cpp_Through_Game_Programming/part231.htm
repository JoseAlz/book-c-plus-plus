<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Creating Overloaded Functions</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part230.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part232.htm">Next &gt;</a></p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;"><h1 href="#bookmark8">Creating Overloaded Functions</h1></p><p style="padding-top: 3pt;padding-left: 41pt;text-indent: 0pt;line-height: 107%;text-align: justify;">To create an overloaded function, you simply need to write multiple function definitions with the same name and different parameter lists. In the Triple program, I write two definitions for the function <span class="s35">triple()</span>, each of which specifies a different type as its single argument. Here are the function prototypes:</p><p class="s35" style="padding-top: 5pt;padding-left: 41pt;text-indent: 0pt;line-height: 119%;text-align: left;">int triple(int number); string triple(string text);</p><p style="padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">The first takes an <span class="s35">int </span>argument and returns an <span class="s35">int</span>. The second takes a <span class="s35">string</span></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: justify;">object and returns a <span class="s35">string </span>object.</p><p style="padding-top: 7pt;padding-left: 41pt;text-indent: 0pt;line-height: 106%;text-align: justify;">In each function definition, you can see that I return triple the value sent. In the first function, I return the <span class="s35">int </span>sent, tripled. In the second function, I return the string sent, repeated three times.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 41pt;text-indent: 0pt;text-align: left;">Tra p</p><p style="padding-left: 41pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="517" height="1" alt="image" src="Image_221.png"/></span></p><p class="s19" style="padding-top: 5pt;padding-left: 59pt;text-indent: 0pt;text-align: justify;">To implement function overloading, you need to write multiple definitions for the same function with different parameter lists. Notice that I didn’t mention anything about return types. That’s because if you write two function definitions in which only the return type is different, you’ll generate a compile error. For example, you cannot have both of the following prototypes in a program:</p><p class="s35" style="padding-top: 5pt;padding-left: 61pt;text-indent: 0pt;line-height: 118%;text-align: justify;">int Bonus(int); float Bonus(int);</p><p style="padding-left: 59pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="498" height="3" alt="image" src="Image_222.png"/></span></p><p class="s19" style="padding-top: 2pt;text-indent: 0pt;text-align: right;"><a name="bookmark588">Inlining Functions 177</a><a name="bookmark589">&zwnj;</a><a name="bookmark663">&zwnj;</a><a name="bookmark664">&zwnj;</a><a name="bookmark665">&zwnj;</a><a name="bookmark666">&zwnj;</a></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part230.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part232.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
