<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Using Friend Functions and Operator Overloading</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part359.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part361.htm">Next &gt;</a></p><p style="padding-left: 41pt;text-indent: 0pt;text-align: left;"><a href="part3.htm#bookmark11" class="s30">Using Friend Functions and Operator Overloading</a></p><p style="padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;text-align: justify;">Friend functions and operator overloading are two advanced concepts related to classes. <span class="s11">Friend functions </span>have complete access to any member of a class. <span class="s11">Operator overloading </span>allows you to define new meanings for built-in operators as they relate to objects of your own classes. As you<span class="s12">â€™</span>ll see, you can use these two concepts together.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part361.htm">Introducing the Friend Critter Program</a><a class="toc0" href="part362.htm">Creating Friend Functions</a><a class="toc0" href="part363.htm">Overloading Operators</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part359.htm">&lt; Previous</a><span> | </span><a href="../Beginning_Cpp_Through_Game_Programming.html">Contents</a><span> | </span><a href="part361.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
